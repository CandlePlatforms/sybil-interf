{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/sybil-interface-candle/src/components/governance/LogoText.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TwitterIcon from '../../assets/images/Twitter_Logo_Blue.png';\nimport styled from 'styled-components';\nimport { RowFixed } from '../Row';\nimport { Check } from 'react-feather';\nimport { useTheme } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logo = styled.img`\n  height: 24px;\n  width: 24px;\n  margin-left: 4px;\n`;\n_c = Logo;\nconst CheckMark = styled(Check)`\n  height: 12px;\n  width: 12px;\n  margin-left: 3px;\n`;\n_c2 = CheckMark;\nexport default function LogoText({\n  children,\n  type\n}) {\n  _s();\n\n  const theme = useTheme();\n  if (!type) return /*#__PURE__*/_jsxDEV(RowFixed, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n\n  switch (type) {\n    case 'twitter':\n      return /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [children, \" \", /*#__PURE__*/_jsxDEV(Logo, {\n          src: TwitterIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n\n    case 'other':\n      return /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [children, \" \", /*#__PURE__*/_jsxDEV(CheckMark, {\n          stroke: theme.primary1,\n          strokeWidth: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n  }\n}\n\n_s(LogoText, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = LogoText;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Logo\");\n$RefreshReg$(_c2, \"CheckMark\");\n$RefreshReg$(_c3, \"LogoText\");","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/components/governance/LogoText.tsx"],"names":["React","TwitterIcon","styled","RowFixed","Check","useTheme","Logo","img","CheckMark","LogoText","children","type","theme","primary1"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA,CAJA;KAAMD,I;AAMN,MAAME,SAAS,GAAGN,MAAM,CAACE,KAAD,CAAQ;AAChC;AACA;AACA;AACA,CAJA;MAAMI,S;AAMN,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,EAAgG;AAAA;;AAC7G,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;AAEA,MAAI,CAACM,IAAL,EAAW,oBAAO,QAAC,QAAD;AAAA,cAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEX,UAAQC,IAAR;AACE,SAAK,SAAL;AACE,0BACE,QAAC,QAAD;AAAA,mBACGD,QADH,oBACa,QAAC,IAAD;AAAM,UAAA,GAAG,EAAET;AAAX;AAAA;AAAA;AAAA;AAAA,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF,SAAK,OAAL;AACE,0BACE,QAAC,QAAD;AAAA,mBACGS,QADH,oBACa,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEE,KAAK,CAACC,QAAzB;AAAmC,UAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF;AACE,0BAAO,QAAC,QAAD;AAAA,kBAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AAdJ;AAgBD;;GArBuBD,Q;UACRJ,Q;;;MADQI,Q","sourcesContent":["import React from 'react'\nimport TwitterIcon from '../../assets/images/Twitter_Logo_Blue.png'\nimport styled from 'styled-components'\nimport { RowFixed } from '../Row'\nimport { Check } from 'react-feather'\nimport { useTheme } from 'hooks'\n\nconst Logo = styled.img`\n  height: 24px;\n  width: 24px;\n  margin-left: 4px;\n`\n\nconst CheckMark = styled(Check)`\n  height: 12px;\n  width: 12px;\n  margin-left: 3px;\n`\n\nexport default function LogoText({ children, type }: { children?: React.ReactNode; type: string | undefined }) {\n  const theme = useTheme()\n\n  if (!type) return <RowFixed>{children}</RowFixed>\n\n  switch (type) {\n    case 'twitter':\n      return (\n        <RowFixed>\n          {children} <Logo src={TwitterIcon} />\n        </RowFixed>\n      )\n    case 'other':\n      return (\n        <RowFixed>\n          {children} <CheckMark stroke={theme.primary1} strokeWidth=\"4px\" />\n        </RowFixed>\n      )\n    default:\n      return <RowFixed>{children}</RowFixed>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}