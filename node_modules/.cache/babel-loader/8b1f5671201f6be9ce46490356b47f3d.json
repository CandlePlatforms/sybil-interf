{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$();\n\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport GOVERNANCE_AAVE_ABI from '../constants/abis/aave-governance.json';\nimport AAVE_ABI from '../constants/abis/aave-token.json';\nimport { ARGENT_WALLET_DETECTOR_ABI, ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS } from '../constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport AUTONOMOUS_ABI from '../constants/abis/autonomous.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport { useActiveProtocol, useGovernanceToken } from '../state/governance/hooks';\nimport { AAVE_GOVERNANCE } from '../state/governance/reducer'; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  _s();\n\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"bS5GtDgwY2raBDSgRZeif67r/2o=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  _s2();\n\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\n_s2(useTokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useWETHContract(withSignerIfPossible) {\n  _s3();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\n_s3(useWETHContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useArgentWalletDetectorContract() {\n  _s4();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined, ARGENT_WALLET_DETECTOR_ABI, false);\n}\n\n_s4(useArgentWalletDetectorContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  _s5();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\n_s5(useENSRegistrarContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  _s6();\n\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\n_s6(useENSResolverContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  _s7();\n\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\n_s7(useBytes32TokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useMulticallContract() {\n  _s8();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\n_s8(useMulticallContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useGovernanceContract() {\n  _s9();\n\n  const [activeProtocol] = useActiveProtocol();\n  const latestAlphaGovernanceAddress = activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.governanceAlphaAddresses[(activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.governanceAlphaAddresses.length) - 1];\n  const bravoAddress = activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.governanceAddressBravo;\n  return useContract(activeProtocol ? bravoAddress !== null && bravoAddress !== void 0 ? bravoAddress : latestAlphaGovernanceAddress : undefined, (activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id) === AAVE_GOVERNANCE.id ? GOVERNANCE_AAVE_ABI : GOVERNANCE_ABI, true);\n}\n\n_s9(useGovernanceContract, \"8lmCeNKXAi5DmzkMzy2tvrIKqEg=\", false, function () {\n  return [useActiveProtocol, useContract];\n});\n\nexport function useAllGovernanceAlphaContracts() {\n  _s10();\n\n  const {\n    library,\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const [activeProtocol] = useActiveProtocol();\n  return useMemo(() => {\n    if (!library || !chainId || !activeProtocol) {\n      return null;\n    }\n\n    try {\n      return activeProtocol.governanceAlphaAddresses.filter(addressMap => Boolean(addressMap[chainId])).map(addressMap => getContract(addressMap[chainId], GOVERNANCE_ABI, library, account ? account : undefined));\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [library, chainId, activeProtocol, account]);\n}\n\n_s10(useAllGovernanceAlphaContracts, \"PWatBmj3rA5NTDHlmiXDEDAtMFc=\", false, function () {\n  return [useActiveWeb3React, useActiveProtocol];\n});\n\nexport function useGovernanceContractBravo() {\n  _s11();\n\n  const [activeProtocol] = useActiveProtocol();\n  return useContract(activeProtocol ? activeProtocol.governanceAddressBravo : undefined, (activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id) === AAVE_GOVERNANCE.id ? GOVERNANCE_AAVE_ABI : GOVERNANCE_ABI, true);\n}\n\n_s11(useGovernanceContractBravo, \"8lmCeNKXAi5DmzkMzy2tvrIKqEg=\", false, function () {\n  return [useActiveProtocol, useContract];\n});\n\nexport function useIsAave() {\n  _s12();\n\n  const [activeProtocol] = useActiveProtocol();\n  return (activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id) === AAVE_GOVERNANCE.id;\n}\n\n_s12(useIsAave, \"jBupuPMG40Y3+Jp3K0cDUO7xEL8=\", false, function () {\n  return [useActiveProtocol];\n});\n\nexport function useGovTokenContract() {\n  _s13();\n\n  const govToken = useGovernanceToken();\n  const isAave = useIsAave();\n  return useContract(govToken ? govToken.address : undefined, isAave ? AAVE_ABI : UNI_ABI, true);\n}\n\n_s13(useGovTokenContract, \"XjfMGfWfj98gakivAMP5a+f6yxY=\", false, function () {\n  return [useGovernanceToken, useIsAave, useContract];\n});\n\nexport function useAutonomousContract(tokenAddress) {\n  _s14();\n\n  return useContract(tokenAddress !== null && tokenAddress !== void 0 ? tokenAddress : undefined, AUTONOMOUS_ABI, true);\n}\n\n_s14(useAutonomousContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/sybil-interf/src/hooks/useContract.ts"],"names":["abi","GOVERNANCE_ABI","UNI_ABI","ChainId","WETH","useMemo","GOVERNANCE_AAVE_ABI","AAVE_ABI","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","WETH_ABI","AUTONOMOUS_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useActiveProtocol","useGovernanceToken","AAVE_GOVERNANCE","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useTokenContract","tokenAddress","useWETHContract","chainId","useArgentWalletDetectorContract","MAINNET","useENSRegistrarContract","GÖRLI","ROPSTEN","RINKEBY","useENSResolverContract","useBytes32TokenContract","useMulticallContract","useGovernanceContract","activeProtocol","latestAlphaGovernanceAddress","governanceAlphaAddresses","length","bravoAddress","governanceAddressBravo","id","useAllGovernanceAlphaContracts","filter","addressMap","Boolean","map","useGovernanceContractBravo","useIsAave","useGovTokenContract","govToken","isAave","useAutonomousContract"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json'\nimport { ChainId, WETH } from '@uniswap/sdk'\nimport { useMemo } from 'react'\nimport GOVERNANCE_AAVE_ABI from '../constants/abis/aave-governance.json'\nimport AAVE_ABI from '../constants/abis/aave-token.json'\nimport {\n  ARGENT_WALLET_DETECTOR_ABI,\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\n} from '../constants/abis/argent-wallet-detector'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport AUTONOMOUS_ABI from '../constants/abis/autonomous.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\nimport { useActiveProtocol, useGovernanceToken } from '../state/governance/hooks'\nimport { AAVE_GOVERNANCE } from '../state/governance/reducer'\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useArgentWalletDetectorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(\n    chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined,\n    ARGENT_WALLET_DETECTOR_ABI,\n    false\n  )\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n\nexport function useGovernanceContract(): Contract | null {\n  const [activeProtocol] = useActiveProtocol()\n\n  const latestAlphaGovernanceAddress =\n    activeProtocol?.governanceAlphaAddresses[activeProtocol?.governanceAlphaAddresses.length - 1]\n\n  const bravoAddress = activeProtocol?.governanceAddressBravo\n\n  return useContract(\n    activeProtocol ? bravoAddress ?? latestAlphaGovernanceAddress : undefined,\n    activeProtocol?.id === AAVE_GOVERNANCE.id ? GOVERNANCE_AAVE_ABI : GOVERNANCE_ABI,\n    true\n  )\n}\n\nexport function useAllGovernanceAlphaContracts(): Contract[] | null {\n  const { library, account, chainId } = useActiveWeb3React()\n  const [activeProtocol] = useActiveProtocol()\n\n  return useMemo(() => {\n    if (!library || !chainId || !activeProtocol) {\n      return null\n    }\n    try {\n      return activeProtocol.governanceAlphaAddresses\n        .filter((addressMap) => Boolean(addressMap[chainId]))\n        .map((addressMap) => getContract(addressMap[chainId], GOVERNANCE_ABI, library, account ? account : undefined))\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [library, chainId, activeProtocol, account])\n}\n\nexport function useGovernanceContractBravo(): Contract | null {\n  const [activeProtocol] = useActiveProtocol()\n\n  return useContract(\n    activeProtocol ? activeProtocol.governanceAddressBravo : undefined,\n    activeProtocol?.id === AAVE_GOVERNANCE.id ? GOVERNANCE_AAVE_ABI : GOVERNANCE_ABI,\n    true\n  )\n}\n\nexport function useIsAave(): boolean {\n  const [activeProtocol] = useActiveProtocol()\n  return activeProtocol?.id === AAVE_GOVERNANCE.id\n}\n\nexport function useGovTokenContract(): Contract | null {\n  const govToken = useGovernanceToken()\n  const isAave = useIsAave()\n  return useContract(govToken ? govToken.address : undefined, isAave ? AAVE_ABI : UNI_ABI, true)\n}\n\nexport function useAutonomousContract(tokenAddress?: string): Contract | null {\n  return useContract(tokenAddress ?? undefined, AUTONOMOUS_ABI, true)\n}\n"]},"metadata":{},"sourceType":"module"}