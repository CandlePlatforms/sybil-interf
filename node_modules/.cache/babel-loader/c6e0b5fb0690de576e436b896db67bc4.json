{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { updateVersion } from '../global/actions';\nimport { updateMatchesDarkMode, updateUserDarkMode, toggleURLWarning, updateTwitterAccount, updateLastSelectedProtocolID } from './actions';\n\nconst currentTimestamp = () => new Date().getTime();\n\nexport const initialState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n  lastSelectedProtocolID: undefined\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserDarkMode, (state, action) => {\n  state.userDarkMode = action.payload.userDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateMatchesDarkMode, (state, action) => {\n  state.matchesDarkMode = action.payload.matchesDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(toggleURLWarning, state => {\n  state.URLWarningVisible = !state.URLWarningVisible;\n}).addCase(updateTwitterAccount, (state, {\n  payload: {\n    twitterAccount\n  }\n}) => {\n  state.twitterAccount = twitterAccount;\n}).addCase(updateLastSelectedProtocolID, (state, {\n  payload: {\n    protocolID\n  }\n}) => {\n  state.lastSelectedProtocolID = protocolID;\n}));","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/sybil-interf/src/state/user/reducer.ts"],"names":["createReducer","updateVersion","updateMatchesDarkMode","updateUserDarkMode","toggleURLWarning","updateTwitterAccount","updateLastSelectedProtocolID","currentTimestamp","Date","getTime","initialState","userDarkMode","matchesDarkMode","timestamp","URLWarningVisible","lastSelectedProtocolID","undefined","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","twitterAccount","protocolID"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,oBAJF,EAKEC,4BALF,QAMO,WANP;;AAQA,MAAMC,gBAAgB,GAAG,MAAM,IAAIC,IAAJ,GAAWC,OAAX,EAA/B;;AAiBA,OAAO,MAAMC,YAAuB,GAAG;AACrCC,EAAAA,YAAY,EAAE,IADuB;AAErCC,EAAAA,eAAe,EAAE,KAFoB;AAGrCC,EAAAA,SAAS,EAAEN,gBAAgB,EAHU;AAIrCO,EAAAA,iBAAiB,EAAE,IAJkB;AAKrCC,EAAAA,sBAAsB,EAAEC;AALa,CAAhC;AAQP,eAAehB,aAAa,CAACU,YAAD,EAAgBO,OAAD,IACzCA,OAAO,CACJC,OADH,CACWjB,aADX,EAC2BkB,KAAD,IAAW;AACjCA,EAAAA,KAAK,CAACC,0BAAN,GAAmCb,gBAAgB,EAAnD;AACD,CAHH,EAIGW,OAJH,CAIWf,kBAJX,EAI+B,CAACgB,KAAD,EAAQE,MAAR,KAAmB;AAC9CF,EAAAA,KAAK,CAACR,YAAN,GAAqBU,MAAM,CAACC,OAAP,CAAeX,YAApC;AACAQ,EAAAA,KAAK,CAACN,SAAN,GAAkBN,gBAAgB,EAAlC;AACD,CAPH,EAQGW,OARH,CAQWhB,qBARX,EAQkC,CAACiB,KAAD,EAAQE,MAAR,KAAmB;AACjDF,EAAAA,KAAK,CAACP,eAAN,GAAwBS,MAAM,CAACC,OAAP,CAAeV,eAAvC;AACAO,EAAAA,KAAK,CAACN,SAAN,GAAkBN,gBAAgB,EAAlC;AACD,CAXH,EAYGW,OAZH,CAYWd,gBAZX,EAY8Be,KAAD,IAAW;AACpCA,EAAAA,KAAK,CAACL,iBAAN,GAA0B,CAACK,KAAK,CAACL,iBAAjC;AACD,CAdH,EAeGI,OAfH,CAeWb,oBAfX,EAeiC,CAACc,KAAD,EAAQ;AAAEG,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAR,KAA4C;AACzEJ,EAAAA,KAAK,CAACI,cAAN,GAAuBA,cAAvB;AACD,CAjBH,EAkBGL,OAlBH,CAkBWZ,4BAlBX,EAkByC,CAACa,KAAD,EAAQ;AAAEG,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAAX,CAAR,KAAwC;AAC7EL,EAAAA,KAAK,CAACJ,sBAAN,GAA+BS,UAA/B;AACD,CApBH,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../global/actions'\nimport {\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  toggleURLWarning,\n  updateTwitterAccount,\n  updateLastSelectedProtocolID,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  twitterAccount?: string\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  timestamp: number\n  URLWarningVisible: boolean\n\n  lastSelectedProtocolID: string | undefined\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n  lastSelectedProtocolID: undefined,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(toggleURLWarning, (state) => {\n      state.URLWarningVisible = !state.URLWarningVisible\n    })\n    .addCase(updateTwitterAccount, (state, { payload: { twitterAccount } }) => {\n      state.twitterAccount = twitterAccount\n    })\n    .addCase(updateLastSelectedProtocolID, (state, { payload: { protocolID } }) => {\n      state.lastSelectedProtocolID = protocolID\n    })\n)\n"]},"metadata":{},"sourceType":"module"}