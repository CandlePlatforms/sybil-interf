{"ast":null,"code":"import { ChainId, Token } from '@uniswap/sdk';\nimport { updateActiveProtocol, updateFilterActive, updateTopDelegates, updateVerifiedDelegates, updateGlobalData, updateMaxFetched } from './actions';\nimport { createReducer } from '@reduxjs/toolkit';\nimport UniLogo from '../../assets/images/uni-logo.png';\nimport CompLogo from '../../assets/images/compLogo.png';\nimport AaveLogo from '../../assets/images/aave-logo.png';\nimport PoolLogo from '../../assets/images/pooltogether-icon.png';\nimport RadicleLogo from \"../../assets/images/radicle-logo.svg\";\nimport NounsLogo from '../../assets/images/nouns-logo.png';\nimport ENSLogo from '../../assets/images/ens.jpeg';\nimport CandleLogo from \"../../assets/images/candle-logo.svg\";\nimport AddAccount from '../../assets/images/AddAccount.png';\nimport { serializeToken } from '../user/hooks';\n// constant addresses for supported protocols\nexport const UNI_GOVERNANCE_ADDRESS_ALPHA_V0 = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F';\nexport const UNI_GOVERNANCE_ADDRESS_ALPHA_V1 = '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6';\nexport const UNI_GOVERNANCE_ADDRESS_BRAVO = '0x408ED6354d4973f66138C91495F2f2FCbd8724C3';\nexport const UNI_ADDRESS = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984';\nconst UNI = new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap');\nexport const UNISWAP_GOVERNANCE = {\n  id: 'uniswap',\n  name: 'Uniswap Governance',\n  logo: UniLogo,\n  primaryColor: '#FF007A',\n  secondaryColor: '#FDEEF5',\n  token: serializeToken(UNI),\n  governanceAlphaAddresses: [UNI_GOVERNANCE_ADDRESS_ALPHA_V0, UNI_GOVERNANCE_ADDRESS_ALPHA_V1],\n  governanceAddressBravo: UNI_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 8,\n  social: '@Uniswap',\n  emoji: '🦄'\n};\nexport const COMP_GOVERNANCE_ADDRESS_BRAVO = '0xc0da02939e1441f497fd74f78ce7decb17b66529';\nexport const COMP_GOVERNANCE_ADDRESS = '0xc0dA01a04C3f3E0be433606045bB7017A7323E38';\nexport const COMP_ADDRESS = '0xc00e94cb662c3520282e6f5717214004a7f26888';\nconst COMP = new Token(ChainId.MAINNET, COMP_ADDRESS, 18, 'COMP', 'Compound Governance Token');\nexport const COMPOUND_GOVERNANCE = {\n  id: 'compound',\n  name: 'Compound Governance',\n  logo: CompLogo,\n  primaryColor: '#00D395',\n  secondaryColor: '#E1F9F1',\n  token: serializeToken(COMP),\n  governanceAlphaAddresses: [COMP_GOVERNANCE_ADDRESS],\n  governanceAddressBravo: COMP_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 42,\n  social: '@compoundfinance',\n  emoji: '🏦'\n};\nexport const AAVE_GOVERNANCE_ADDRESS = '0xEC568fffba86c094cf06b22134B23074DFE2252c';\nexport const AAVE_ADDRESS = '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9';\nconst AAVE = new Token(ChainId.MAINNET, AAVE_ADDRESS, 18, 'AAVE', 'Aave Token');\nexport const AAVE_GOVERNANCE = {\n  id: 'aave',\n  name: 'Aave Governance',\n  logo: AaveLogo,\n  primaryColor: '#B6509E',\n  secondaryColor: '#ebfeff',\n  token: serializeToken(AAVE),\n  governanceAlphaAddresses: [AAVE_GOVERNANCE_ADDRESS],\n  social: '@AaveAave',\n  emoji: '👻'\n};\nexport const POOL_TOGETHER_GOVERNANCE_ADDRESS = '0xB3a87172F555ae2a2AB79Be60B336D2F7D0187f0';\nexport const POOL_ADDRESS = '0x0cEC1A9154Ff802e7934Fc916Ed7Ca50bDE6844e';\nconst POOL = new Token(ChainId.MAINNET, POOL_ADDRESS, 18, 'POOL', 'PoolTogether');\nexport const POOL_TOGETHER_GOVERNANCE = {\n  id: 'pool',\n  name: 'PoolTogether Governance',\n  logo: PoolLogo,\n  primaryColor: '#5c0ef3',\n  secondaryColor: '#f2eeff',\n  token: serializeToken(POOL),\n  governanceAlphaAddresses: [POOL_TOGETHER_GOVERNANCE_ADDRESS],\n  social: '@PoolTogether_',\n  emoji: '🏆'\n};\nexport const RADICLE_GOVERNANCE_ADDRESS = '0x690e775361AD66D1c4A25d89da9fCd639F5198eD';\nexport const RADICLE_ADDRESS = '0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3';\nconst RADICLE = new Token(ChainId.MAINNET, RADICLE_ADDRESS, 18, 'RAD', 'Radicle');\nexport const RADICLE_GOVERNANCE = {\n  id: 'radicle',\n  name: 'Radicle Governance',\n  logo: RadicleLogo,\n  primaryColor: '#5555FF',\n  secondaryColor: '#E3E3FF',\n  token: serializeToken(RADICLE),\n  governanceAlphaAddresses: [RADICLE_GOVERNANCE_ADDRESS],\n  social: '@radicle',\n  emoji: '🌱'\n};\nexport const ENS_GOVERNANCE_ADDRESS = '0x690e775361AD66D1c4A25d89da9fCd639F5198eD';\nexport const ENS_ADDRESS = '0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3';\nconst ENS = new Token(ChainId.MAINNET, RADICLE_ADDRESS, 18, 'ENS', 'Ethereum Name Service');\nexport const ENS_GOVERNANCE = {\n  id: 'ens',\n  name: 'ENS Governance',\n  logo: ENSLogo,\n  primaryColor: '#5284ff',\n  secondaryColor: '#cfddff',\n  token: serializeToken(ENS),\n  governanceAlphaAddresses: [ENS_GOVERNANCE_ADDRESS],\n  social: '@ensdomains',\n  emoji: '🌱'\n};\nexport const NOUNS_GOVERNANCE_ADDRESS_BRAVO = '0x6f3E6272A167e8AcCb32072d08E0957F9c79223d';\nexport const NOUNS_ADDRESS = '0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03';\nconst NOUN = new Token(ChainId.MAINNET, NOUNS_ADDRESS, 0, 'NOUN', 'Nouns');\nconst EMOJIS = ['🍕', '🤖', '🐶', '🍤', '🚘', '💍', '🐟', '👑', '🐋', '🐸'];\nexport const NOUNS_GOVERNANCE = {\n  id: 'nouns',\n  name: 'Nouns DAO Governance',\n  logo: NounsLogo,\n  primaryColor: '#D63C5E',\n  secondaryColor: '#E8ECEF',\n  token: serializeToken(NOUN),\n  governanceAlphaAddresses: [],\n  governanceAddressBravo: NOUNS_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 0,\n  social: '@nounsdao',\n  emoji: EMOJIS[Math.floor(Math.random() * EMOJIS.length)]\n};\nexport const CANDLE_GOVERNANCE_ADDRESS = '0xB80Be29667021AE0B617AC9eFe0a3A1a58033681';\nexport const CNDL_ADDRESS = '0xbc138bD20C98186CC0342C8e380953aF0cb48BA8';\nconst CNDL = new Token(ChainId.MAINNET, CNDL_ADDRESS, 18, 'CNDL', 'Candle');\nexport const CANDLE_GOVERNANCE = {\n  id: 'candle',\n  name: 'Candle Platforms',\n  logo: CandleLogo,\n  primaryColor: '#6fbeff',\n  secondaryColor: '#ebfeff',\n  token: serializeToken(CNDL),\n  governanceAlphaAddresses: [CANDLE_GOVERNANCE_ADDRESS],\n  social: '@cndlcoin',\n  emoji: '🕯️'\n};\nexport const CONNECT_CONFIG = {\n  id: 'connect',\n  name: 'Connect Social Profile',\n  // placeholder\n  logo: AddAccount,\n  // placeholder\n  primaryColor: '#5284ff',\n  // placeholder\n  secondaryColor: '#cfddff',\n  // placeholder\n  token: serializeToken(ENS),\n  //placeholder\n  governanceAlphaAddresses: [ENS_GOVERNANCE_ADDRESS],\n  //placeholder\n  social: '@twitter' // placeholder\n\n}; // #/connect or #/delegates/connect\n// show only identity flow e.g. link to twitter\n\nexport function identityOnlyPath(pathname) {\n  return pathname.split('/', 2)[1] == CONNECT_CONFIG.id || pathname.split('/', 3)[2] == CONNECT_CONFIG.id;\n} // mapping for routing\n\nexport const SUPPORTED_PROTOCOLS = {\n  uniswap: UNISWAP_GOVERNANCE,\n  compound: COMPOUND_GOVERNANCE,\n  aave: AAVE_GOVERNANCE,\n  pool: POOL_TOGETHER_GOVERNANCE,\n  radicle: RADICLE_GOVERNANCE,\n  nouns: NOUNS_GOVERNANCE,\n  ens: ENS_GOVERNANCE,\n  candle: CANDLE_GOVERNANCE,\n  connect: CONNECT_CONFIG\n};\nexport const FETCHING_INTERVAL = 50;\nexport const initialState = {\n  activeProtocol: undefined,\n  filterActive: false,\n  // top delegates and pagination details\n  topDelegates: {},\n  maxFetched: {},\n  verifiedDelegates: {},\n  globalData: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(updateActiveProtocol, (state, action) => {\n  state.activeProtocol = action.payload.activeProtocol;\n}).addCase(updateFilterActive, (state, action) => {\n  state.filterActive = action.payload.filterActive;\n}).addCase(updateTopDelegates, (state, action) => {\n  state.topDelegates[action.payload.protocolID] = action.payload.topDelegates;\n}).addCase(updateVerifiedDelegates, (state, action) => {\n  state.verifiedDelegates[action.payload.protocolID] = action.payload.verifiedDelegates;\n}).addCase(updateGlobalData, (state, action) => {\n  state.globalData[action.payload.protocolID] = action.payload.data;\n}).addCase(updateMaxFetched, (state, action) => {\n  state.maxFetched[action.payload.protocolID] = action.payload.maxFetched;\n}));","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/sybil-interf/src/state/governance/reducer.ts"],"names":["ChainId","Token","updateActiveProtocol","updateFilterActive","updateTopDelegates","updateVerifiedDelegates","updateGlobalData","updateMaxFetched","createReducer","UniLogo","CompLogo","AaveLogo","PoolLogo","NounsLogo","ENSLogo","AddAccount","serializeToken","UNI_GOVERNANCE_ADDRESS_ALPHA_V0","UNI_GOVERNANCE_ADDRESS_ALPHA_V1","UNI_GOVERNANCE_ADDRESS_BRAVO","UNI_ADDRESS","UNI","MAINNET","UNISWAP_GOVERNANCE","id","name","logo","primaryColor","secondaryColor","token","governanceAlphaAddresses","governanceAddressBravo","migrationProposalId","social","emoji","COMP_GOVERNANCE_ADDRESS_BRAVO","COMP_GOVERNANCE_ADDRESS","COMP_ADDRESS","COMP","COMPOUND_GOVERNANCE","AAVE_GOVERNANCE_ADDRESS","AAVE_ADDRESS","AAVE","AAVE_GOVERNANCE","POOL_TOGETHER_GOVERNANCE_ADDRESS","POOL_ADDRESS","POOL","POOL_TOGETHER_GOVERNANCE","RADICLE_GOVERNANCE_ADDRESS","RADICLE_ADDRESS","RADICLE","RADICLE_GOVERNANCE","RadicleLogo","ENS_GOVERNANCE_ADDRESS","ENS_ADDRESS","ENS","ENS_GOVERNANCE","NOUNS_GOVERNANCE_ADDRESS_BRAVO","NOUNS_ADDRESS","NOUN","EMOJIS","NOUNS_GOVERNANCE","Math","floor","random","length","CANDLE_GOVERNANCE_ADDRESS","CNDL_ADDRESS","CNDL","CANDLE_GOVERNANCE","CandleLogo","CONNECT_CONFIG","identityOnlyPath","pathname","split","SUPPORTED_PROTOCOLS","uniswap","compound","aave","pool","radicle","nouns","ens","candle","connect","FETCHING_INTERVAL","initialState","activeProtocol","undefined","filterActive","topDelegates","maxFetched","verifiedDelegates","globalData","builder","addCase","state","action","payload","protocolID","data"],"mappings":"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","sourcesContent":["import { SerializedToken } from './../user/actions'\nimport { DelegateData } from './hooks'\nimport { ChainId, Token } from '@uniswap/sdk'\nimport {\n  updateActiveProtocol,\n  updateFilterActive,\n  updateTopDelegates,\n  updateVerifiedDelegates,\n  updateGlobalData,\n  updateMaxFetched,\n} from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport UniLogo from '../../assets/images/uni-logo.png'\nimport CompLogo from '../../assets/images/compLogo.png'\nimport AaveLogo from '../../assets/images/aave-logo.png'\nimport PoolLogo from '../../assets/images/pooltogether-icon.png'\nimport RadicleLogo from '../../assets/images/radicle-logo.svg'\nimport NounsLogo from '../../assets/images/nouns-logo.png'\nimport ENSLogo from '../../assets/images/ens.jpeg'\nimport CandleLogo from '../../assets/images/candle-logo.svg'\nimport AddAccount from '../../assets/images/AddAccount.png'\n\nimport { serializeToken } from '../user/hooks'\n\nexport interface GovernanceInfo {\n  id: string\n  name: string\n  logo: string\n  primaryColor: string\n  secondaryColor: string\n  token: SerializedToken\n  governanceAlphaAddresses: string[]\n  governanceAddressBravo?: string\n  migrationProposalId?: number\n  social: string\n  emoji?: string\n}\n\n// protocol wide data\nexport interface GlobaData {\n  id: string\n  totalTokenHolders: number\n  totalDelegates: number\n  delegatedVotes: number\n  delegatedVotesRaw: number\n}\n\n// constant addresses for supported protocols\nexport const UNI_GOVERNANCE_ADDRESS_ALPHA_V0 = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\nexport const UNI_GOVERNANCE_ADDRESS_ALPHA_V1 = '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\nexport const UNI_GOVERNANCE_ADDRESS_BRAVO = '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n\nexport const UNI_ADDRESS = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'\nconst UNI = new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap')\nexport const UNISWAP_GOVERNANCE: GovernanceInfo = {\n  id: 'uniswap',\n  name: 'Uniswap Governance',\n  logo: UniLogo,\n  primaryColor: '#FF007A',\n  secondaryColor: '#FDEEF5',\n  token: serializeToken(UNI),\n  governanceAlphaAddresses: [UNI_GOVERNANCE_ADDRESS_ALPHA_V0, UNI_GOVERNANCE_ADDRESS_ALPHA_V1],\n  governanceAddressBravo: UNI_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 8,\n  social: '@Uniswap',\n  emoji: '🦄',\n}\n\nexport const COMP_GOVERNANCE_ADDRESS_BRAVO = '0xc0da02939e1441f497fd74f78ce7decb17b66529'\nexport const COMP_GOVERNANCE_ADDRESS = '0xc0dA01a04C3f3E0be433606045bB7017A7323E38'\nexport const COMP_ADDRESS = '0xc00e94cb662c3520282e6f5717214004a7f26888'\nconst COMP = new Token(ChainId.MAINNET, COMP_ADDRESS, 18, 'COMP', 'Compound Governance Token')\nexport const COMPOUND_GOVERNANCE: GovernanceInfo = {\n  id: 'compound',\n  name: 'Compound Governance',\n  logo: CompLogo,\n  primaryColor: '#00D395',\n  secondaryColor: '#E1F9F1',\n  token: serializeToken(COMP),\n  governanceAlphaAddresses: [COMP_GOVERNANCE_ADDRESS],\n  governanceAddressBravo: COMP_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 42,\n  social: '@compoundfinance',\n  emoji: '🏦',\n}\n\nexport const AAVE_GOVERNANCE_ADDRESS = '0xEC568fffba86c094cf06b22134B23074DFE2252c'\nexport const AAVE_ADDRESS = '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9'\nconst AAVE = new Token(ChainId.MAINNET, AAVE_ADDRESS, 18, 'AAVE', 'Aave Token')\nexport const AAVE_GOVERNANCE: GovernanceInfo = {\n  id: 'aave',\n  name: 'Aave Governance',\n  logo: AaveLogo,\n  primaryColor: '#B6509E',\n  secondaryColor: '#ebfeff',\n  token: serializeToken(AAVE),\n  governanceAlphaAddresses: [AAVE_GOVERNANCE_ADDRESS],\n  social: '@AaveAave',\n  emoji: '👻',\n}\n\nexport const POOL_TOGETHER_GOVERNANCE_ADDRESS = '0xB3a87172F555ae2a2AB79Be60B336D2F7D0187f0'\nexport const POOL_ADDRESS = '0x0cEC1A9154Ff802e7934Fc916Ed7Ca50bDE6844e'\nconst POOL = new Token(ChainId.MAINNET, POOL_ADDRESS, 18, 'POOL', 'PoolTogether')\nexport const POOL_TOGETHER_GOVERNANCE: GovernanceInfo = {\n  id: 'pool',\n  name: 'PoolTogether Governance',\n  logo: PoolLogo,\n  primaryColor: '#5c0ef3',\n  secondaryColor: '#f2eeff',\n  token: serializeToken(POOL),\n  governanceAlphaAddresses: [POOL_TOGETHER_GOVERNANCE_ADDRESS],\n  social: '@PoolTogether_',\n  emoji: '🏆',\n}\n\nexport const RADICLE_GOVERNANCE_ADDRESS = '0x690e775361AD66D1c4A25d89da9fCd639F5198eD'\nexport const RADICLE_ADDRESS = '0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3'\nconst RADICLE = new Token(ChainId.MAINNET, RADICLE_ADDRESS, 18, 'RAD', 'Radicle')\nexport const RADICLE_GOVERNANCE: GovernanceInfo = {\n  id: 'radicle',\n  name: 'Radicle Governance',\n  logo: RadicleLogo,\n  primaryColor: '#5555FF',\n  secondaryColor: '#E3E3FF',\n  token: serializeToken(RADICLE),\n  governanceAlphaAddresses: [RADICLE_GOVERNANCE_ADDRESS],\n  social: '@radicle',\n  emoji: '🌱',\n}\n\nexport const ENS_GOVERNANCE_ADDRESS = '0x690e775361AD66D1c4A25d89da9fCd639F5198eD'\nexport const ENS_ADDRESS = '0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3'\nconst ENS = new Token(ChainId.MAINNET, RADICLE_ADDRESS, 18, 'ENS', 'Ethereum Name Service')\nexport const ENS_GOVERNANCE: GovernanceInfo = {\n  id: 'ens',\n  name: 'ENS Governance',\n  logo: ENSLogo,\n  primaryColor: '#5284ff',\n  secondaryColor: '#cfddff',\n  token: serializeToken(ENS),\n  governanceAlphaAddresses: [ENS_GOVERNANCE_ADDRESS],\n  social: '@ensdomains',\n  emoji: '🌱',\n}\n\nexport const NOUNS_GOVERNANCE_ADDRESS_BRAVO = '0x6f3E6272A167e8AcCb32072d08E0957F9c79223d'\nexport const NOUNS_ADDRESS = '0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03'\nconst NOUN = new Token(ChainId.MAINNET, NOUNS_ADDRESS, 0, 'NOUN', 'Nouns')\nconst EMOJIS = ['🍕', '🤖', '🐶', '🍤', '🚘', '💍', '🐟', '👑', '🐋', '🐸']\nexport const NOUNS_GOVERNANCE: GovernanceInfo = {\n  id: 'nouns',\n  name: 'Nouns DAO Governance',\n  logo: NounsLogo,\n  primaryColor: '#D63C5E',\n  secondaryColor: '#E8ECEF',\n  token: serializeToken(NOUN),\n  governanceAlphaAddresses: [],\n  governanceAddressBravo: NOUNS_GOVERNANCE_ADDRESS_BRAVO,\n  migrationProposalId: 0,\n  social: '@nounsdao',\n  emoji: EMOJIS[Math.floor(Math.random() * EMOJIS.length)],\n}\n\nexport const CANDLE_GOVERNANCE_ADDRESS = '0xB80Be29667021AE0B617AC9eFe0a3A1a58033681'\nexport const CNDL_ADDRESS = '0xbc138bD20C98186CC0342C8e380953aF0cb48BA8'\nconst CNDL = new Token(ChainId.MAINNET, CNDL_ADDRESS, 18, 'CNDL', 'Candle')\nexport const CANDLE_GOVERNANCE: GovernanceInfo = {\n  id: 'candle',\n  name: 'Candle Platforms',\n  logo: CandleLogo,\n  primaryColor: '#6fbeff',\n  secondaryColor: '#ebfeff',\n  token: serializeToken(CNDL),\n  governanceAlphaAddresses: [CANDLE_GOVERNANCE_ADDRESS],\n  social: '@cndlcoin',\n  emoji: '🕯️',\n}\n\nexport const CONNECT_CONFIG: GovernanceInfo = {\n  id: 'connect',\n  name: 'Connect Social Profile', // placeholder\n  logo: AddAccount, // placeholder\n  primaryColor: '#5284ff', // placeholder\n  secondaryColor: '#cfddff', // placeholder\n  token: serializeToken(ENS), //placeholder\n  governanceAlphaAddresses: [ENS_GOVERNANCE_ADDRESS], //placeholder\n  social: '@twitter', // placeholder\n}\n\n// #/connect or #/delegates/connect\n// show only identity flow e.g. link to twitter\nexport function identityOnlyPath(pathname: string) {\n  return pathname.split('/', 2)[1] == CONNECT_CONFIG.id || pathname.split('/', 3)[2] == CONNECT_CONFIG.id\n}\n\n// mapping for routing\nexport const SUPPORTED_PROTOCOLS: { [id: string]: GovernanceInfo } = {\n  uniswap: UNISWAP_GOVERNANCE,\n  compound: COMPOUND_GOVERNANCE,\n  aave: AAVE_GOVERNANCE,\n  pool: POOL_TOGETHER_GOVERNANCE,\n  radicle: RADICLE_GOVERNANCE,\n  nouns: NOUNS_GOVERNANCE,\n  ens: ENS_GOVERNANCE,\n  candle: CANDLE_GOVERNANCE,\n  connect: CONNECT_CONFIG,\n}\n\nexport const FETCHING_INTERVAL = 50\n\nexport interface GovernanceState {\n  // the selected option from supported protocol options\n  activeProtocol: GovernanceInfo | undefined\n\n  // filter only verified delegates\n  filterActive: boolean\n\n  // top delegates based on votes\n  topDelegates: {\n    [protocolID: string]: DelegateData[] | undefined\n  }\n\n  // used for paginated delegate lookup\n  maxFetched: {\n    [protocolID: string]: number | undefined\n  }\n\n  // only delegates with verified usernames\n  verifiedDelegates: {\n    [protocolID: string]: DelegateData[] | undefined\n  }\n\n  globalData: {\n    [protocolID: string]: GlobaData | undefined\n  }\n}\n\nexport const initialState: GovernanceState = {\n  activeProtocol: undefined,\n  filterActive: false,\n\n  // top delegates and pagination details\n  topDelegates: {},\n  maxFetched: {},\n\n  verifiedDelegates: {},\n  globalData: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateActiveProtocol, (state, action) => {\n      state.activeProtocol = action.payload.activeProtocol\n    })\n    .addCase(updateFilterActive, (state, action) => {\n      state.filterActive = action.payload.filterActive\n    })\n    .addCase(updateTopDelegates, (state, action) => {\n      state.topDelegates[action.payload.protocolID] = action.payload.topDelegates\n    })\n    .addCase(updateVerifiedDelegates, (state, action) => {\n      state.verifiedDelegates[action.payload.protocolID] = action.payload.verifiedDelegates\n    })\n    .addCase(updateGlobalData, (state, action) => {\n      state.globalData[action.payload.protocolID] = action.payload.data\n    })\n    .addCase(updateMaxFetched, (state, action) => {\n      state.maxFetched[action.payload.protocolID] = action.payload.maxFetched\n    })\n)\n"]},"metadata":{},"sourceType":"module"}