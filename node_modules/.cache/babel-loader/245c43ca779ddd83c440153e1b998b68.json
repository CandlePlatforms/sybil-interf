{"ast":null,"code":"import { JSBI, Percent } from '@uniswap/sdk';\nexport { PRELOADED_PROPOSALS } from './proposals';\nexport const SYBIL_ADDRESS = '0xa71330402Fcb7290D026F1dbB727d367E50EABF7';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\nexport const NetworkContextName = 'NETWORK'; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/constants/index.ts"],"names":["JSBI","Percent","PRELOADED_PROPOSALS","SYBIL_ADDRESS","ZERO_ADDRESS","AVERAGE_BLOCK_TIME_IN_SECS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD"],"mappings":"AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,cAA9B;AAEA,SAASC,mBAAT,QAAoC,aAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,4CAAtB;AAEP,OAAO,MAAMC,YAAY,GAAG,4CAArB;AAEP,OAAO,MAAMC,0BAA0B,GAAG,EAAnC;AAEP,OAAO,MAAMC,kBAAkB,GAAG,SAA3B,C,CAEP;;AACA,OAAO,MAAMC,wBAAwB,GAAG,EAAjC,C,CACP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,KAAK,EAAvC;AAEP,OAAO,MAAMC,YAAY,GAAGT,IAAI,CAACU,MAAL,CAAY,CAAZ,CAArB,C,CAEP;;AACA,OAAO,MAAMC,QAAQ,GAAG,IAAIV,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,CAAZ,CAAZ,EAA4BV,IAAI,CAACU,MAAL,CAAY,KAAZ,CAA5B,CAAjB;AACP,OAAO,MAAME,SAAS,GAAGZ,IAAI,CAACU,MAAL,CAAY,KAAZ,CAAlB,C,CACP;;AACA,OAAO,MAAMG,wBAAiC,GAAG,IAAIZ,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA1C,C,CAAmF;;AAC1F,OAAO,MAAME,2BAAoC,GAAG,IAAIb,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA7C,C,CAAsF;;AAC7F,OAAO,MAAMG,yBAAkC,GAAG,IAAId,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA3C,C,CAAoF;AAC3F;;AACA,OAAO,MAAMI,oCAA6C,GAAG,IAAIf,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,IAAZ,CAAZ,EAA+BE,SAA/B,CAAtD,C,CAAgG;AACvG;;AACA,OAAO,MAAMK,+BAAwC,GAAG,IAAIhB,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,IAAZ,CAAZ,EAA+BE,SAA/B,CAAjD,C,CAA2F;AAElG;;AACA,OAAO,MAAMM,OAAa,GAAGlB,IAAI,CAACmB,YAAL,CAAkBnB,IAAI,CAACU,MAAL,CAAY,EAAZ,CAAlB,EAAmCV,IAAI,CAACU,MAAL,CAAY,EAAZ,CAAnC,CAAtB,C,CAA0E;;AACjF,OAAO,MAAMU,2BAA2B,GAAG,IAAInB,OAAJ,CAAYD,IAAI,CAACU,MAAL,CAAY,EAAZ,CAAZ,EAA6BV,IAAI,CAACU,MAAL,CAAY,KAAZ,CAA7B,CAApC","sourcesContent":["import { JSBI, Percent } from '@uniswap/sdk'\n\nexport { PRELOADED_PROPOSALS } from './proposals'\n\nexport const SYBIL_ADDRESS = '0xa71330402Fcb7290D026F1dbB727d367E50EABF7'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n"]},"metadata":{},"sourceType":"module"}