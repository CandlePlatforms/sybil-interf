{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/sybil-interf/src/utils/getName.tsx\";\nimport React from 'react';\nimport { shortenAddress, isAddress } from '.';\nimport LogoText from '../components/governance/LogoText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function nameOrAddress(address, identities, shortern, autonomous, ens) {\n  const formattedAddress = isAddress(address);\n\n  if (!address) {\n    return '';\n  } // checksum name, as they are checksummed in identity mapping\n\n\n  const identity = formattedAddress ? identities === null || identities === void 0 ? void 0 : identities[formattedAddress] : undefined;\n\n  if (identity === null || identity === void 0 ? void 0 : identity.twitter) {\n    return /*#__PURE__*/_jsxDEV(LogoText, {\n      type: \"twitter\",\n      children: '@' + identity.twitter.handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (identity === null || identity === void 0 ? void 0 : identity.other) {\n    return /*#__PURE__*/_jsxDEV(LogoText, {\n      type: \"other\",\n      children: identity.other.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (autonomous) {\n    return 'Autonomous Proposal Contract ⚙️';\n  }\n\n  if (shortern) {\n    return ens !== null && ens !== void 0 ? ens : shortenAddress(address);\n  }\n\n  return ens !== null && ens !== void 0 ? ens : address;\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/sybil-interf/src/utils/getName.tsx"],"names":["React","shortenAddress","isAddress","LogoText","nameOrAddress","address","identities","shortern","autonomous","ens","formattedAddress","identity","undefined","twitter","handle","other","name"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,GAA1C;AAEA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,OAAO,SAASC,aAAT,CACLC,OADK,EAELC,UAFK,EAGLC,QAHK,EAILC,UAJK,EAKLC,GALK,EAMe;AACpB,QAAMC,gBAAgB,GAAGR,SAAS,CAACG,OAAD,CAAlC;;AAEA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD,GALmB,CAOpB;;;AACA,QAAMM,QAA8B,GAAGD,gBAAgB,GAAGJ,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAGI,gBAAH,CAAb,GAAoCE,SAA3F;;AAEA,MAAID,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEE,OAAd,EAAuB;AACrB,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,SAAf;AAAA,gBAA0B,MAAMF,QAAQ,CAACE,OAAT,CAAiBC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEI,KAAd,EAAqB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAA,gBAAwBJ,QAAQ,CAACI,KAAT,CAAeC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIR,UAAJ,EAAgB;AACd,WAAO,iCAAP;AACD;;AAED,MAAID,QAAJ,EAAc;AACZ,WAAOE,GAAP,aAAOA,GAAP,cAAOA,GAAP,GAAcR,cAAc,CAACI,OAAD,CAA5B;AACD;;AAED,SAAOI,GAAP,aAAOA,GAAP,cAAOA,GAAP,GAAcJ,OAAd;AACD","sourcesContent":["import React, { ReactNode } from 'react'\nimport { shortenAddress, isAddress } from '.'\nimport { Identity } from '../state/social/reducer'\nimport LogoText from '../components/governance/LogoText'\n\nexport function nameOrAddress(\n  address: string | undefined,\n  identities: { [address: string]: Identity } | undefined,\n  shortern?: boolean | undefined,\n  autonomous?: boolean | undefined,\n  ens?: string | null\n): string | ReactNode {\n  const formattedAddress = isAddress(address)\n\n  if (!address) {\n    return ''\n  }\n\n  // checksum name, as they are checksummed in identity mapping\n  const identity: Identity | undefined = formattedAddress ? identities?.[formattedAddress] : undefined\n\n  if (identity?.twitter) {\n    return <LogoText type=\"twitter\">{'@' + identity.twitter.handle}</LogoText>\n  }\n\n  if (identity?.other) {\n    return <LogoText type=\"other\">{identity.other.name}</LogoText>\n  }\n\n  if (autonomous) {\n    return 'Autonomous Proposal Contract ⚙️'\n  }\n\n  if (shortern) {\n    return ens ?? shortenAddress(address)\n  }\n\n  return ens ?? address\n}\n"]},"metadata":{},"sourceType":"module"}