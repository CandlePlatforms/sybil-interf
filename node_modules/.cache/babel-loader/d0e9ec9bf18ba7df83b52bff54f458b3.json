{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/sybil-interface-candle/src/components/vote/DelegateModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../Modal';\nimport { AutoColumn } from '../Column';\nimport styled from 'styled-components';\nimport { RowBetween } from '../Row';\nimport { TYPE } from '../../theme';\nimport { X } from 'react-feather';\nimport { ButtonPrimary } from '../Button';\nimport { useActiveWeb3React } from '../../hooks';\nimport AddressInputPanel from '../AddressInputPanel';\nimport { isAddress } from 'ethers/lib/utils';\nimport useENS from '../../hooks/useENS';\nimport { useDelegateCallback, useGovernanceToken, useActiveProtocol } from '../../state/governance/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { LoadingView, SubmittedView } from '../ModalViews';\nimport { Text } from 'rebass';\nimport { useModalDelegatee } from '../../state/application/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 24px;\n`;\n_c = ContentWrapper;\nconst StyledClosed = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c2 = StyledClosed;\nconst TextButton = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c3 = TextButton;\nexport default function DelegateModal({\n  isOpen,\n  onDismiss,\n  title\n}) {\n  _s();\n\n  var _activeProtocol$token;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const [prefilledDelegate] = useModalDelegatee(); // state for delegate input\n\n  const [usingDelegate, setUsingDelegate] = useState(!!!prefilledDelegate);\n  const [typed, setTyped] = useState('');\n\n  function handleRecipientType(val) {\n    setTyped(val);\n  } // reset modal based on prefilled value or not\n\n\n  useEffect(() => {\n    if (prefilledDelegate) {\n      setUsingDelegate(true);\n      setTyped(prefilledDelegate);\n    } else {\n      setTyped('');\n      setUsingDelegate(false);\n    }\n  }, [prefilledDelegate]); // monitor for self delegation or input for third part delegate\n  // default is self delegation\n\n  const activeDelegate = usingDelegate ? typed : account;\n  const {\n    address: parsedAddress\n  } = useENS(activeDelegate);\n  const [activeProtocol] = useActiveProtocol();\n  const govToken = useGovernanceToken(); // get the number of votes available to delegate\n\n  const govTokenBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, govToken);\n  const delegateCallback = useDelegateCallback(); // monitor call to help UI loading state\n\n  const [hash, setHash] = useState();\n  const [attempting, setAttempting] = useState(false); // wrapper to reset state on modal close\n\n  function wrappedOndismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  async function onDelegate() {\n    var _delegateCallback;\n\n    setAttempting(true); // if callback not returned properly ignore\n\n    if (!delegateCallback) return; // try delegation and store hash\n\n    const hash = await ((_delegateCallback = delegateCallback(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : undefined)) === null || _delegateCallback === void 0 ? void 0 : _delegateCallback.catch(() => {\n      setAttempting(false);\n    }));\n\n    if (hash) {\n      setHash(hash);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOndismiss,\n    maxHeight: 90,\n    children: [!attempting && !hash && /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      gap: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n            fontWeight: 500,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledClosed, {\n            stroke: \"black\",\n            onClick: wrappedOndismiss\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n          children: [activeProtocol === null || activeProtocol === void 0 ? void 0 : (_activeProtocol$token = activeProtocol.token) === null || _activeProtocol$token === void 0 ? void 0 : _activeProtocol$token.symbol, \" tokens represent voting shares in \", activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.name, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n          children: \"You can either vote on each proposal yourself or delegate your votes to a third party.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), usingDelegate && /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n          value: typed,\n          onChange: handleRecipientType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          disabled: !isAddress(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : ''),\n          onClick: onDelegate,\n          children: /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n            color: \"white\",\n            children: usingDelegate ? 'Delegate Votes' : 'Self Delegate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n          onClick: () => setUsingDelegate(!usingDelegate),\n          children: /*#__PURE__*/_jsxDEV(TYPE.blue, {\n            children: usingDelegate ? 'Change Delegate' : 'Delegate to an address'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), attempting && !hash && /*#__PURE__*/_jsxDEV(LoadingView, {\n      onDismiss: wrappedOndismiss,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n          children: usingDelegate ? 'Delegating votes' : 'Unlocking Votes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n          fontSize: 36,\n          children: govTokenBalance === null || govTokenBalance === void 0 ? void 0 : govTokenBalance.toSignificant(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), hash && /*#__PURE__*/_jsxDEV(SubmittedView, {\n      onDismiss: wrappedOndismiss,\n      hash: hash,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n          children: \"Transaction Submitted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n          fontSize: 36,\n          textAlign: \"center\",\n          children: [govTokenBalance === null || govTokenBalance === void 0 ? void 0 : govTokenBalance.toSignificant(4), \" Votes Delegated\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          onClick: wrappedOndismiss,\n          style: {\n            margin: '20px 0 0 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 20,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DelegateModal, \"Zhh1qDnyK00Z9UxNzyWu2KWn8YY=\", false, function () {\n  return [useActiveWeb3React, useModalDelegatee, useENS, useActiveProtocol, useGovernanceToken, useTokenBalance, useDelegateCallback];\n});\n\n_c4 = DelegateModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ContentWrapper\");\n$RefreshReg$(_c2, \"StyledClosed\");\n$RefreshReg$(_c3, \"TextButton\");\n$RefreshReg$(_c4, \"DelegateModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/components/vote/DelegateModal.tsx"],"names":["React","useState","useEffect","Modal","AutoColumn","styled","RowBetween","TYPE","X","ButtonPrimary","useActiveWeb3React","AddressInputPanel","isAddress","useENS","useDelegateCallback","useGovernanceToken","useActiveProtocol","useTokenBalance","LoadingView","SubmittedView","Text","useModalDelegatee","ContentWrapper","StyledClosed","TextButton","div","DelegateModal","isOpen","onDismiss","title","account","prefilledDelegate","usingDelegate","setUsingDelegate","typed","setTyped","handleRecipientType","val","activeDelegate","address","parsedAddress","activeProtocol","govToken","govTokenBalance","undefined","delegateCallback","hash","setHash","attempting","setAttempting","wrappedOndismiss","onDelegate","catch","token","symbol","name","toSignificant","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,CAAT,QAAkB,eAAlB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,iBAAlD,QAA2E,8BAA3E;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,eAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,cAAc,GAAGjB,MAAM,CAACD,UAAD,CAAa;AAC1C;AACA;AACA,CAHA;KAAMkB,c;AAKN,MAAMC,YAAY,GAAGlB,MAAM,CAACG,CAAD,CAAI;AAC/B;AACA;AACA;AACA,CAJA;MAAMe,Y;AAMN,MAAMC,UAAU,GAAGnB,MAAM,CAACoB,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAMD,U;AAYN,eAAe,SAASE,aAAT,CAAuB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAAvB,EAAqE;AAAA;;AAAA;;AAClF,QAAM;AAAEC,IAAAA;AAAF,MAAcpB,kBAAkB,EAAtC;AAEA,QAAM,CAACqB,iBAAD,IAAsBV,iBAAiB,EAA7C,CAHkF,CAKlF;;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAC,CAAC,CAAC,CAAC8B,iBAAJ,CAAlD;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,EAAD,CAAlC;;AACA,WAASmC,mBAAT,CAA6BC,GAA7B,EAA0C;AACxCF,IAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,GAViF,CAYlF;;;AACAnC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,iBAAJ,EAAuB;AACrBE,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,QAAQ,CAACJ,iBAAD,CAAR;AACD,KAHD,MAGO;AACLI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GARQ,EAQN,CAACF,iBAAD,CARM,CAAT,CAbkF,CAuBlF;AACA;;AACA,QAAMO,cAAc,GAAGN,aAAa,GAAGE,KAAH,GAAWJ,OAA/C;AACA,QAAM;AAAES,IAAAA,OAAO,EAAEC;AAAX,MAA6B3B,MAAM,CAACyB,cAAD,CAAzC;AAEA,QAAM,CAACG,cAAD,IAAmBzB,iBAAiB,EAA1C;AAEA,QAAM0B,QAAQ,GAAG3B,kBAAkB,EAAnC,CA9BkF,CAgClF;;AACA,QAAM4B,eAAe,GAAG1B,eAAe,CAACa,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYc,SAAZ,EAAuBF,QAAvB,CAAvC;AAEA,QAAMG,gBAAgB,GAAG/B,mBAAmB,EAA5C,CAnCkF,CAqClF;;AACA,QAAM,CAACgC,IAAD,EAAOC,OAAP,IAAkB9C,QAAQ,EAAhC;AACA,QAAM,CAAC+C,UAAD,EAAaC,aAAb,IAA8BhD,QAAQ,CAAC,KAAD,CAA5C,CAvCkF,CAyClF;;AACA,WAASiD,gBAAT,GAA4B;AAC1BH,IAAAA,OAAO,CAACH,SAAD,CAAP;AACAK,IAAAA,aAAa,CAAC,KAAD,CAAb;AACArB,IAAAA,SAAS;AACV;;AAED,iBAAeuB,UAAf,GAA4B;AAAA;;AAC1BF,IAAAA,aAAa,CAAC,IAAD,CAAb,CAD0B,CAG1B;;AACA,QAAI,CAACJ,gBAAL,EAAuB,OAJG,CAM1B;;AACA,UAAMC,IAAI,GAAG,4BAAMD,gBAAgB,CAACL,aAAD,aAACA,aAAD,cAACA,aAAD,GAAkBI,SAAlB,CAAtB,sDAAM,kBAA8CQ,KAA9C,CAAoD,MAAM;AAC3EH,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFkB,CAAN,CAAb;;AAIA,QAAIH,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEnB,MAAf;AAAuB,IAAA,SAAS,EAAEuB,gBAAlC;AAAoD,IAAA,SAAS,EAAE,EAA/D;AAAA,eACG,CAACF,UAAD,IAAe,CAACF,IAAhB,iBACC,QAAC,cAAD;AAAgB,MAAA,GAAG,EAAC,IAApB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAqB,QAAA,OAAO,EAAC,QAA7B;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,IAAD,CAAM,YAAN;AAAmB,YAAA,UAAU,EAAE,GAA/B;AAAA,sBAAqCjB;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,MAAM,EAAC,OAArB;AAA6B,YAAA,OAAO,EAAEqB;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,qBACGT,cADH,aACGA,cADH,gDACGA,cAAc,CAAEY,KADnB,0DACG,sBAAuBC,MAD1B,yCACqEb,cADrE,aACqEA,cADrE,uBACqEA,cAAc,CAAEc,IADrF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EAWGvB,aAAa,iBAAI,QAAC,iBAAD;AAAmB,UAAA,KAAK,EAAEE,KAA1B;AAAiC,UAAA,QAAQ,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAXpB,eAYE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAE,CAACxB,SAAS,CAAC4B,aAAD,aAACA,aAAD,cAACA,aAAD,GAAkB,EAAlB,CAAnC;AAA0D,UAAA,OAAO,EAAEW,UAAnE;AAAA,iCACE,QAAC,IAAD,CAAM,YAAN;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA,sBAAkCnB,aAAa,GAAG,gBAAH,GAAsB;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,CAACD,aAAF,CAA3C;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYA,aAAa,GAAG,iBAAH,GAAuB;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAwBGgB,UAAU,IAAI,CAACF,IAAf,iBACC,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEI,gBAAxB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAE,QAAhC;AAAA,gCACE,QAAC,IAAD,CAAM,WAAN;AAAA,oBAAmBlB,aAAa,GAAG,kBAAH,GAAwB;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,QAAQ,EAAE,EAArB;AAAA,oBAA0BW,eAA1B,aAA0BA,eAA1B,uBAA0BA,eAAe,CAAEa,aAAjB,CAA+B,CAA/B;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBJ,EAgCGV,IAAI,iBACH,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEI,gBAA1B;AAA4C,MAAA,IAAI,EAAEJ,IAAlD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAE,QAAhC;AAAA,gCACE,QAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,QAAQ,EAAE,EAArB;AAAyB,UAAA,SAAS,EAAC,QAAnC;AAAA,qBACGH,eADH,aACGA,eADH,uBACGA,eAAe,CAAEa,aAAjB,CAA+B,CAA/B,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEN,gBAAxB;AAA0C,UAAA,KAAK,EAAE;AAAEO,YAAAA,MAAM,EAAE;AAAV,WAAjD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAE,GAAlB;AAAuB,YAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GAlHuB/B,a;UACFhB,kB,EAEQW,iB,EAuBOR,M,EAEVG,iB,EAERD,kB,EAGOE,e,EAECH,mB;;;MAnCHY,a","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Modal from '../Modal'\nimport { AutoColumn } from '../Column'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { TYPE } from '../../theme'\nimport { X } from 'react-feather'\nimport { ButtonPrimary } from '../Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport AddressInputPanel from '../AddressInputPanel'\nimport { isAddress } from 'ethers/lib/utils'\nimport useENS from '../../hooks/useENS'\nimport { useDelegateCallback, useGovernanceToken, useActiveProtocol } from '../../state/governance/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { LoadingView, SubmittedView } from '../ModalViews'\nimport { Text } from 'rebass'\nimport { useModalDelegatee } from '../../state/application/hooks'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 24px;\n`\n\nconst StyledClosed = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst TextButton = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\ninterface VoteModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  title: string\n}\n\nexport default function DelegateModal({ isOpen, onDismiss, title }: VoteModalProps) {\n  const { account } = useActiveWeb3React()\n\n  const [prefilledDelegate] = useModalDelegatee()\n\n  // state for delegate input\n  const [usingDelegate, setUsingDelegate] = useState(!!!prefilledDelegate)\n  const [typed, setTyped] = useState('')\n  function handleRecipientType(val: string) {\n    setTyped(val)\n  }\n\n  // reset modal based on prefilled value or not\n  useEffect(() => {\n    if (prefilledDelegate) {\n      setUsingDelegate(true)\n      setTyped(prefilledDelegate)\n    } else {\n      setTyped('')\n      setUsingDelegate(false)\n    }\n  }, [prefilledDelegate])\n\n  // monitor for self delegation or input for third part delegate\n  // default is self delegation\n  const activeDelegate = usingDelegate ? typed : account\n  const { address: parsedAddress } = useENS(activeDelegate)\n\n  const [activeProtocol] = useActiveProtocol()\n\n  const govToken = useGovernanceToken()\n\n  // get the number of votes available to delegate\n  const govTokenBalance = useTokenBalance(account ?? undefined, govToken)\n\n  const delegateCallback = useDelegateCallback()\n\n  // monitor call to help UI loading state\n  const [hash, setHash] = useState<string | undefined>()\n  const [attempting, setAttempting] = useState(false)\n\n  // wrapper to reset state on modal close\n  function wrappedOndismiss() {\n    setHash(undefined)\n    setAttempting(false)\n    onDismiss()\n  }\n\n  async function onDelegate() {\n    setAttempting(true)\n\n    // if callback not returned properly ignore\n    if (!delegateCallback) return\n\n    // try delegation and store hash\n    const hash = await delegateCallback(parsedAddress ?? undefined)?.catch(() => {\n      setAttempting(false)\n    })\n\n    if (hash) {\n      setHash(hash)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOndismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <AutoColumn gap=\"lg\" justify=\"center\">\n            <RowBetween>\n              <TYPE.mediumHeader fontWeight={500}>{title}</TYPE.mediumHeader>\n              <StyledClosed stroke=\"black\" onClick={wrappedOndismiss} />\n            </RowBetween>\n            <TYPE.body>\n              {activeProtocol?.token?.symbol} tokens represent voting shares in {activeProtocol?.name}.\n            </TYPE.body>\n            <TYPE.body>\n              You can either vote on each proposal yourself or delegate your votes to a third party.\n            </TYPE.body>\n            {usingDelegate && <AddressInputPanel value={typed} onChange={handleRecipientType} />}\n            <ButtonPrimary disabled={!isAddress(parsedAddress ?? '')} onClick={onDelegate}>\n              <TYPE.mediumHeader color=\"white\">{usingDelegate ? 'Delegate Votes' : 'Self Delegate'}</TYPE.mediumHeader>\n            </ButtonPrimary>\n            <TextButton onClick={() => setUsingDelegate(!usingDelegate)}>\n              <TYPE.blue>{usingDelegate ? 'Change Delegate' : 'Delegate to an address'}</TYPE.blue>\n            </TextButton>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOndismiss}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <TYPE.largeHeader>{usingDelegate ? 'Delegating votes' : 'Unlocking Votes'}</TYPE.largeHeader>\n            <TYPE.main fontSize={36}>{govTokenBalance?.toSignificant(4)}</TYPE.main>\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {hash && (\n        <SubmittedView onDismiss={wrappedOndismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <TYPE.largeHeader>Transaction Submitted</TYPE.largeHeader>\n            <TYPE.main fontSize={36} textAlign=\"center\">\n              {govTokenBalance?.toSignificant(4)} Votes Delegated\n            </TYPE.main>\n            <ButtonPrimary onClick={wrappedOndismiss} style={{ margin: '20px 0 0 0' }}>\n              <Text fontWeight={500} fontSize={20}>\n                Close\n              </Text>\n            </ButtonPrimary>\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}