{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$();\n\nimport { updateLastSelectedProtocolID } from './../user/actions';\nimport { TokenAmount } from '@uniswap/sdk';\nimport { updateActiveProtocol, updateFilterActive, updateTopDelegates, updateVerifiedDelegates, updateGlobalData, updateMaxFetched } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { COMPOUND_GOVERNANCE, NOUNS_GOVERNANCE, UNISWAP_GOVERNANCE } from './reducer';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useGovernanceContract, useGovTokenContract, useIsAave } from '../../hooks/useContract';\nimport { useSingleCallResult } from '../multicall/hooks';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useTransactionAdder } from '../transactions/hooks';\nimport { isAddress, calculateGasMargin } from '../../utils';\nimport { useSubgraphClient } from '../application/hooks';\nimport { fetchProposals, enumerateProposalState } from '../../data/governance';\nimport { ALL_VOTERS, DELEGATE_INFO } from '../../apollo/queries';\nimport { deserializeToken } from '../user/hooks';\nimport { useIsEOA } from '../../hooks/useIsEOA';\nimport { AUTONOMOUS_PROPOSAL_BYTECODE } from '../../constants/proposals';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useGenericAlphaProposalStates, useGenericBravoProposalStates } from 'data/proposalStates';\nexport function useActiveProtocol() {\n  _s();\n\n  const dispatch = useDispatch();\n  const activeProtocol = useSelector(state => {\n    return state.governance.activeProtocol;\n  });\n  const setActiveProtocol = useCallback(activeProtocol => {\n    dispatch(updateActiveProtocol({\n      activeProtocol\n    }));\n    dispatch(updateLastSelectedProtocolID({\n      protocolID: activeProtocol.id\n    }));\n  }, [dispatch]);\n  return [activeProtocol, setActiveProtocol];\n}\n\n_s(useActiveProtocol, \"FTOhtXNUY22yVwUYYtAYnCPg5hg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport function useFilterActive() {\n  _s2();\n\n  const dispatch = useDispatch();\n  const filterActive = useSelector(state => {\n    return state.governance.filterActive;\n  });\n  const setFilterActive = useCallback(filterActive => {\n    dispatch(updateFilterActive({\n      filterActive\n    }));\n  }, [dispatch]);\n  return [filterActive, setFilterActive];\n}\n\n_s2(useFilterActive, \"rttWF6yFJjuMvjVTpvGcADhg8UQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport function useGovernanceToken() {\n  _s3();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [activeProtocol] = useActiveProtocol();\n  return chainId && activeProtocol ? deserializeToken(activeProtocol.token) : undefined;\n} // @todo add typed query response\n\n_s3(useGovernanceToken, \"GluzBs2TPsTIlelzIhFeuYM/kpU=\", false, function () {\n  return [useActiveWeb3React, useActiveProtocol];\n});\n\nexport function useGlobalData() {\n  _s4();\n\n  const dispatch = useDispatch();\n  const [activeProtocol] = useActiveProtocol();\n  const globalData = useSelector(state => state.governance.globalData);\n  const setGlobalData = useCallback(data => {\n    activeProtocol && dispatch(updateGlobalData({\n      protocolID: activeProtocol.id,\n      data\n    }));\n  }, [activeProtocol, dispatch]);\n  return [activeProtocol ? globalData[activeProtocol.id] : undefined, setGlobalData];\n}\n\n_s4(useGlobalData, \"B0OGq0Q3qjWzCjqwruSmM6O8Kbo=\", false, function () {\n  return [useDispatch, useActiveProtocol, useSelector];\n});\n\nexport function useMaxFetched() {\n  _s5();\n\n  const dispatch = useDispatch();\n  const [activeProtocol] = useActiveProtocol();\n  const maxFetched = useSelector(state => state.governance.maxFetched);\n  const setMaxFetched = useCallback(maxFetched => {\n    activeProtocol && dispatch(updateMaxFetched({\n      protocolID: activeProtocol.id,\n      maxFetched\n    }));\n  }, [activeProtocol, dispatch]);\n  return [activeProtocol ? maxFetched[activeProtocol.id] : undefined, setMaxFetched];\n}\n\n_s5(useMaxFetched, \"764LvR8OxRUcn3EXBPARKLbcJoI=\", false, function () {\n  return [useDispatch, useActiveProtocol, useSelector];\n});\n\nexport function useTopDelegates() {\n  _s6();\n\n  const [activeProtocol] = useActiveProtocol();\n  const dispatch = useDispatch();\n  const delegates = useSelector(state => {\n    return state.governance.topDelegates;\n  });\n  const setTopDelegates = useCallback(topDelegates => {\n    activeProtocol && dispatch(updateTopDelegates({\n      protocolID: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id,\n      topDelegates\n    }));\n  }, [activeProtocol, dispatch]);\n  return [activeProtocol ? delegates === null || delegates === void 0 ? void 0 : delegates[activeProtocol.id] : undefined, setTopDelegates];\n}\n\n_s6(useTopDelegates, \"2bWQ0zwzlFXNj3OTWHb9+NBH3HU=\", false, function () {\n  return [useActiveProtocol, useDispatch, useSelector];\n});\n\nexport function useVerifiedDelegates() {\n  _s7();\n\n  const [activeProtocol] = useActiveProtocol();\n  const dispatch = useDispatch();\n  const delegates = useSelector(state => {\n    return state.governance.verifiedDelegates;\n  });\n  const setVerifiedDelegates = useCallback(verifiedDelegates => {\n    activeProtocol && dispatch(updateVerifiedDelegates({\n      protocolID: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id,\n      verifiedDelegates\n    }));\n  }, [activeProtocol, dispatch]);\n  return [activeProtocol ? delegates === null || delegates === void 0 ? void 0 : delegates[activeProtocol.id] : undefined, setVerifiedDelegates];\n}\n\n_s7(useVerifiedDelegates, \"wUfc1ik6sRbVWdluAAA1pXxX7lc=\", false, function () {\n  return [useActiveProtocol, useDispatch, useSelector];\n});\n\n/**\n * @TODO can this be used to speed up the loading?\n */\nexport function useAllProposalStates() {\n  _s8();\n\n  const [activeProtocol] = useActiveProtocol();\n  const alphaStates = useGenericAlphaProposalStates();\n  const bravoStates = useGenericBravoProposalStates();\n\n  if (activeProtocol === COMPOUND_GOVERNANCE || activeProtocol === NOUNS_GOVERNANCE || activeProtocol === UNISWAP_GOVERNANCE) {\n    return bravoStates;\n  }\n\n  return alphaStates;\n}\n\n_s8(useAllProposalStates, \"uJUNXX6RaCz+ulbmOv3oillfPJE=\", false, function () {\n  return [useActiveProtocol, useGenericAlphaProposalStates, useGenericBravoProposalStates];\n});\n\nexport function useProposalStatus(id) {\n  _s9();\n\n  const allStatuses = useAllProposalStates();\n  const isAaave = useIsAave();\n  return allStatuses ? enumerateProposalState(allStatuses[isAaave ? parseInt(id) : parseInt(id) - 1]) : undefined;\n}\n\n_s9(useProposalStatus, \"+bbziDMbPvXlPaIWYxAoOpeZ6M4=\", false, function () {\n  return [useAllProposalStates, useIsAave];\n});\n\nexport function useAllProposals() {\n  _s10();\n\n  const [proposals, setProposals] = useState(); // get subgraph client for active protocol\n\n  const govClient = useSubgraphClient();\n  const govToken = useGovernanceToken();\n  const [activeProtocol] = useActiveProtocol();\n  useEffect(() => {\n    setProposals(undefined);\n  }, [activeProtocol]); // subgraphs only store ids in lowercase, format\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (govToken && activeProtocol) {\n          fetchProposals(govClient, govToken.address, activeProtocol.id).then(data => {\n            if (data) {\n              const proposalMap = data.reduce((accum, proposal) => {\n                accum[proposal.id] = proposal;\n                return accum;\n              }, {});\n              setProposals(proposalMap);\n            }\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (!proposals && govToken) {\n      fetchData();\n    }\n  }, [activeProtocol, govClient, govToken, proposals]);\n  useEffect(() => {\n    if (proposals && govToken) {\n      Object.values(proposals).map(p => {\n        p.forCount = p.forVotes.reduce((accum, vote) => accum + parseFloat(vote.votes), 0);\n        p.againstCount = p.againstVotes.reduce((accum, vote) => accum + parseFloat(vote.votes), 0);\n        return true;\n      });\n    }\n  }, [govToken, proposals]);\n  return proposals;\n}\n\n_s10(useAllProposals, \"kOQJ51y+w1smjBK73FfEmAtab9A=\", false, function () {\n  return [useSubgraphClient, useGovernanceToken, useActiveProtocol];\n});\n\nexport function useProposalData(id) {\n  _s11();\n\n  const allProposalData = useAllProposals();\n  return allProposalData === null || allProposalData === void 0 ? void 0 : allProposalData[id];\n} // get the users delegatee if it exists\n\n_s11(useProposalData, \"Yog2/aWOZJWmTHiGrSb6juneC7Q=\", false, function () {\n  return [useAllProposals];\n});\n\nexport function useUserDelegatee(address) {\n  _s12();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const tokenContract = useGovTokenContract();\n  const isAave = useIsAave();\n  const accountToUse = address ? address : account;\n  const {\n    result\n  } = useSingleCallResult(tokenContract, isAave ? 'getDelegateeByType' : 'delegates', isAave ? [accountToUse !== null && accountToUse !== void 0 ? accountToUse : undefined, 0] : [accountToUse !== null && accountToUse !== void 0 ? accountToUse : undefined]);\n  const formattedAddress = isAddress(result === null || result === void 0 ? void 0 : result[0]);\n  return formattedAddress !== false ? formattedAddress : undefined;\n} // gets the users current votes\n\n_s12(useUserDelegatee, \"fSOaEYOFgwho785J+t05bc9QEAc=\", false, function () {\n  return [useActiveWeb3React, useGovTokenContract, useIsAave, useSingleCallResult];\n});\n\nexport function useUserVotes() {\n  _s13();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const govTokenContract = useGovTokenContract();\n  const govToken = useGovernanceToken();\n  const isAaave = useIsAave(); // check for available votes\n\n  const votes = (_useSingleCallResult = useSingleCallResult(govTokenContract, isAaave ? 'getPowerCurrent' : 'getCurrentVotes', isAaave ? [account !== null && account !== void 0 ? account : undefined, 0] : [account !== null && account !== void 0 ? account : undefined])) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  return votes && govToken ? new TokenAmount(govToken, votes) : undefined;\n} // fetch available votes as of block (usually proposal start block)\n\n_s13(useUserVotes, \"U1sEadJyjTw58Hu9/vh7qBFhKnw=\", false, function () {\n  return [useActiveWeb3React, useGovTokenContract, useGovernanceToken, useIsAave, useSingleCallResult];\n});\n\nexport function useUserVotesAsOfBlock(block) {\n  _s14();\n\n  var _useSingleCallResult2, _useSingleCallResult3;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const govTokenContract = useGovTokenContract();\n  const govToken = useGovernanceToken();\n  const isAave = useIsAave(); // check for available votes\n\n  const votes = (_useSingleCallResult2 = useSingleCallResult(govTokenContract, isAave ? 'getPowerAtBlock' : 'getPriorVotes', isAave ? [account !== null && account !== void 0 ? account : undefined, block !== null && block !== void 0 ? block : undefined, 0] : [account !== null && account !== void 0 ? account : undefined, block !== null && block !== void 0 ? block : undefined])) === null || _useSingleCallResult2 === void 0 ? void 0 : (_useSingleCallResult3 = _useSingleCallResult2.result) === null || _useSingleCallResult3 === void 0 ? void 0 : _useSingleCallResult3[0];\n  return votes && govToken ? new TokenAmount(govToken, votes) : undefined;\n}\n\n_s14(useUserVotesAsOfBlock, \"BHWIBWTbLQyWfS5nQ2KgsBHNYRU=\", false, function () {\n  return [useActiveWeb3React, useGovTokenContract, useGovernanceToken, useIsAave, useSingleCallResult];\n});\n\nexport function useDelegateCallback() {\n  _s15();\n\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const addTransaction = useTransactionAdder();\n  const govTokenContract = useGovTokenContract();\n  return useCallback(delegatee => {\n    if (!library || !chainId || !account || !isAddress(delegatee !== null && delegatee !== void 0 ? delegatee : '')) return undefined;\n    const args = [delegatee];\n    if (!govTokenContract) throw new Error('No Governance Contract!');\n    return govTokenContract.estimateGas.delegate(...args, {}).then(estimatedGasLimit => {\n      return govTokenContract.delegate(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          summary: `Delegated votes`\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, chainId, library, govTokenContract]);\n}\n\n_s15(useDelegateCallback, \"e1Rb2ZFe53M/KRNM0N8WWtZOq54=\", false, function () {\n  return [useActiveWeb3React, useTransactionAdder, useGovTokenContract];\n});\n\nexport function useVoteCallback() {\n  _s16();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const govContract = useGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  const isAaveGov = useIsAave();\n  const voteCallback = useCallback((proposalId, support) => {\n    if (!account || !govContract || !proposalId) return;\n    const args = [proposalId, support];\n\n    if (isAaveGov) {\n      return govContract.estimateGas.submitVote(...args, {}).then(estimatedGasLimit => {\n        return govContract.submitVote(...args, {\n          value: null,\n          gasLimit: calculateGasMargin(estimatedGasLimit)\n        }).then(response => {\n          addTransaction(response, {\n            summary: `Voted ${support ? 'for ' : 'against'} proposal ${proposalId}`\n          });\n          return response.hash;\n        });\n      });\n    } else {\n      return govContract.estimateGas.castVote(...args, {}).then(estimatedGasLimit => {\n        return govContract.castVote(...args, {\n          value: null,\n          gasLimit: calculateGasMargin(estimatedGasLimit)\n        }).then(response => {\n          addTransaction(response, {\n            summary: `Voted ${support ? 'for ' : 'against'} proposal ${proposalId}`\n          });\n          return response.hash;\n        });\n      });\n    }\n  }, [account, addTransaction, govContract, isAaveGov]);\n  return {\n    voteCallback\n  };\n}\n\n_s16(useVoteCallback, \"zxK3Nh0YG88Q+ZESDDnM01mAhxU=\", false, function () {\n  return [useActiveWeb3React, useGovernanceContract, useTransactionAdder, useIsAave];\n});\n\nexport function useAllVotersForProposal(proposalID, support) {\n  _s17();\n\n  const subgraphClient = useSubgraphClient();\n  const [voters, setVoters] = useState();\n  useEffect(() => {\n    setVoters(undefined);\n  }, [proposalID, subgraphClient]);\n  useEffect(() => {\n    async function fetchData() {\n      subgraphClient === null || subgraphClient === void 0 ? void 0 : subgraphClient.query({\n        query: ALL_VOTERS,\n        variables: {\n          proposalID,\n          support\n        }\n      }).then(res => {\n        setVoters(res.data.votes);\n      });\n    }\n\n    if (!voters) {\n      fetchData();\n    }\n  });\n  return voters;\n}\n\n_s17(useAllVotersForProposal, \"gdEWVTqu/p9wGMfbPmOUNwBY0Mo=\", false, function () {\n  return [useSubgraphClient];\n});\n\n// undefined means loading, null means no delegate found\nexport function useDelegateInfo(address) {\n  _s18();\n\n  const {\n    library\n  } = useActiveWeb3React();\n  const client = useSubgraphClient();\n  const [data, setData] = useState();\n  const isEOA = useIsEOA(address);\n  const [activeProtocol] = useActiveProtocol(); // reset data on account switch\n\n  const prevAddress = usePrevious(address);\n  const prevProtocol = usePrevious(activeProtocol);\n  useEffect(() => {\n    if (prevAddress !== address && !!prevAddress && !!address || prevProtocol !== activeProtocol) {\n      setData(undefined);\n    }\n  }, [activeProtocol, address, prevAddress, prevProtocol]);\n  useEffect(() => {\n    async function fetchData() {\n      client === null || client === void 0 ? void 0 : client.query({\n        query: DELEGATE_INFO,\n        variables: {\n          address: address === null || address === void 0 ? void 0 : address.toLocaleLowerCase()\n        }\n      }).then(async res => {\n        var _res$data;\n\n        if (res && res.data && ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.delegates[0])) {\n          var _resData$delegatedVot, _resData$delegatedVot2, _resData$tokenHolders;\n\n          const source = await (library === null || library === void 0 ? void 0 : library.getCode(res.data.delegates[0].id));\n          const resData = res.data.delegates[0];\n\n          if (!resData) {\n            setData({\n              delegatedVotes: 0,\n              delegatedVotesRaw: 0,\n              tokenHoldersRepresentedAmount: 0,\n              votes: [],\n              EOA: isEOA,\n              autonomous: source === AUTONOMOUS_PROPOSAL_BYTECODE\n            });\n          }\n\n          const votes = resData ? resData.votes // sort in order created\n          .sort((a, b) => parseInt(a.proposal.id) > parseInt(b.proposal.id) ? 1 : -1).map(v => ({\n            proposal: parseInt(v.proposal.id),\n            votes: parseFloat(v.votes),\n            support: v.support\n          })) : [];\n          setData({\n            delegatedVotes: parseFloat((_resData$delegatedVot = resData === null || resData === void 0 ? void 0 : resData.delegatedVotes) !== null && _resData$delegatedVot !== void 0 ? _resData$delegatedVot : '0'),\n            delegatedVotesRaw: parseInt((_resData$delegatedVot2 = resData === null || resData === void 0 ? void 0 : resData.delegatedVotesRaw) !== null && _resData$delegatedVot2 !== void 0 ? _resData$delegatedVot2 : '0'),\n            tokenHoldersRepresentedAmount: (_resData$tokenHolders = resData === null || resData === void 0 ? void 0 : resData.tokenHoldersRepresentedAmount) !== null && _resData$tokenHolders !== void 0 ? _resData$tokenHolders : 0,\n            votes,\n            EOA: isEOA,\n            autonomous: source === AUTONOMOUS_PROPOSAL_BYTECODE\n          });\n        } else {\n          setData(null);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n    if (!data && address && library) {\n      fetchData();\n    }\n  }, [address, client, data, isEOA, library]);\n  return data;\n}\n\n_s18(useDelegateInfo, \"7j7XcKNGS3ulh7h7QsVo5J56NfE=\", false, function () {\n  return [useActiveWeb3React, useSubgraphClient, useIsEOA, useActiveProtocol, usePrevious, usePrevious];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/state/governance/hooks.ts"],"names":["updateLastSelectedProtocolID","TokenAmount","updateActiveProtocol","updateFilterActive","updateTopDelegates","updateVerifiedDelegates","updateGlobalData","updateMaxFetched","useDispatch","useSelector","COMPOUND_GOVERNANCE","NOUNS_GOVERNANCE","UNISWAP_GOVERNANCE","useState","useEffect","useCallback","useGovernanceContract","useGovTokenContract","useIsAave","useSingleCallResult","useActiveWeb3React","useTransactionAdder","isAddress","calculateGasMargin","useSubgraphClient","fetchProposals","enumerateProposalState","ALL_VOTERS","DELEGATE_INFO","deserializeToken","useIsEOA","AUTONOMOUS_PROPOSAL_BYTECODE","usePrevious","useGenericAlphaProposalStates","useGenericBravoProposalStates","useActiveProtocol","dispatch","activeProtocol","state","governance","setActiveProtocol","protocolID","id","useFilterActive","filterActive","setFilterActive","useGovernanceToken","chainId","token","undefined","useGlobalData","globalData","setGlobalData","data","useMaxFetched","maxFetched","setMaxFetched","useTopDelegates","delegates","topDelegates","setTopDelegates","useVerifiedDelegates","verifiedDelegates","setVerifiedDelegates","useAllProposalStates","alphaStates","bravoStates","useProposalStatus","allStatuses","isAaave","parseInt","useAllProposals","proposals","setProposals","govClient","govToken","fetchData","address","then","proposalMap","reduce","accum","proposal","e","console","log","Object","values","map","p","forCount","forVotes","vote","parseFloat","votes","againstCount","againstVotes","useProposalData","allProposalData","useUserDelegatee","account","tokenContract","isAave","accountToUse","result","formattedAddress","useUserVotes","govTokenContract","useUserVotesAsOfBlock","block","useDelegateCallback","library","addTransaction","delegatee","args","Error","estimateGas","delegate","estimatedGasLimit","value","gasLimit","response","summary","hash","useVoteCallback","govContract","isAaveGov","voteCallback","proposalId","support","submitVote","castVote","useAllVotersForProposal","proposalID","subgraphClient","voters","setVoters","query","variables","res","useDelegateInfo","client","setData","isEOA","prevAddress","prevProtocol","toLocaleLowerCase","source","getCode","resData","delegatedVotes","delegatedVotesRaw","tokenHoldersRepresentedAmount","EOA","autonomous","sort","a","b","v","catch"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,4BAAT,QAA6C,mBAA7C;AAEA,SAASC,WAAT,QAA4C,cAA5C;AACA,SACEC,oBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,uBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,WAPP;AASA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAoCC,mBAApC,EAAyDC,gBAAzD,EAA2EC,kBAA3E,QAAqG,WAArG;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,SAArD,QAAsE,yBAAtE;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,aAA9C;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,uBAAvD;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,sBAA1C;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,4BAAT,QAA6C,2BAA7C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,6BAAT,EAAwCC,6BAAxC,QAA6E,qBAA7E;AAkBA,OAAO,SAASC,iBAAT,GAAqG;AAAA;;AAC1G,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM6B,cAAc,GAAG5B,WAAW,CAAsD6B,KAAD,IAAW;AAChG,WAAOA,KAAK,CAACC,UAAN,CAAiBF,cAAxB;AACD,GAFiC,CAAlC;AAIA,QAAMG,iBAAiB,GAAGzB,WAAW,CAClCsB,cAAD,IAAoC;AAClCD,IAAAA,QAAQ,CAAClC,oBAAoB,CAAC;AAAEmC,MAAAA;AAAF,KAAD,CAArB,CAAR;AACAD,IAAAA,QAAQ,CAACpC,4BAA4B,CAAC;AAAEyC,MAAAA,UAAU,EAAEJ,cAAc,CAACK;AAA7B,KAAD,CAA7B,CAAR;AACD,GAJkC,EAKnC,CAACN,QAAD,CALmC,CAArC;AAOA,SAAO,CAACC,cAAD,EAAiBG,iBAAjB,CAAP;AACD;;GAdeL,iB;UACG3B,W,EACMC,W;;;AAczB,OAAO,SAASkC,eAAT,GAAuE;AAAA;;AAC5E,QAAMP,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAMoC,YAAY,GAAGnC,WAAW,CAAoD6B,KAAD,IAAW;AAC5F,WAAOA,KAAK,CAACC,UAAN,CAAiBK,YAAxB;AACD,GAF+B,CAAhC;AAIA,QAAMC,eAAe,GAAG9B,WAAW,CAChC6B,YAAD,IAA2B;AACzBR,IAAAA,QAAQ,CAACjC,kBAAkB,CAAC;AAAEyC,MAAAA;AAAF,KAAD,CAAnB,CAAR;AACD,GAHgC,EAIjC,CAACR,QAAD,CAJiC,CAAnC;AAMA,SAAO,CAACQ,YAAD,EAAeC,eAAf,CAAP;AACD;;IAbeF,e;UACGnC,W,EACIC,W;;;AAavB,OAAO,SAASqC,kBAAT,GAAiD;AAAA;;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAc3B,kBAAkB,EAAtC;AACA,QAAM,CAACiB,cAAD,IAAmBF,iBAAiB,EAA1C;AACA,SAAOY,OAAO,IAAIV,cAAX,GAA4BR,gBAAgB,CAACQ,cAAc,CAACW,KAAhB,CAA5C,GAAqEC,SAA5E;AACD,C,CAED;;IANgBH,kB;UACM1B,kB,EACKe,iB;;;AAK3B,OAAO,SAASe,aAAT,GAAyF;AAAA;;AAC9F,QAAMd,QAAQ,GAAG5B,WAAW,EAA5B;AAEA,QAAM,CAAC6B,cAAD,IAAmBF,iBAAiB,EAA1C;AAEA,QAAMgB,UAAU,GAAG1C,WAAW,CAAkD6B,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBY,UAA7E,CAA9B;AAEA,QAAMC,aAAa,GAAGrC,WAAW,CAC9BsC,IAAD,IAAiC;AAC/BhB,IAAAA,cAAc,IAAID,QAAQ,CAAC9B,gBAAgB,CAAC;AAAEmC,MAAAA,UAAU,EAAEJ,cAAc,CAACK,EAA7B;AAAiCW,MAAAA;AAAjC,KAAD,CAAjB,CAA1B;AACD,GAH8B,EAI/B,CAAChB,cAAD,EAAiBD,QAAjB,CAJ+B,CAAjC;AAOA,SAAO,CAACC,cAAc,GAAGc,UAAU,CAACd,cAAc,CAACK,EAAhB,CAAb,GAAmCO,SAAlD,EAA6DG,aAA7D,CAAP;AACD;;IAfeF,a;UACG1C,W,EAEQ2B,iB,EAEN1B,W;;;AAYrB,OAAO,SAAS6C,aAAT,GAAyF;AAAA;;AAC9F,QAAMlB,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM,CAAC6B,cAAD,IAAmBF,iBAAiB,EAA1C;AACA,QAAMoB,UAAU,GAAG9C,WAAW,CAAkD6B,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBgB,UAA7E,CAA9B;AACA,QAAMC,aAAa,GAAGzC,WAAW,CAC9BwC,UAAD,IAAoC;AAClClB,IAAAA,cAAc,IAAID,QAAQ,CAAC7B,gBAAgB,CAAC;AAAEkC,MAAAA,UAAU,EAAEJ,cAAc,CAACK,EAA7B;AAAiCa,MAAAA;AAAjC,KAAD,CAAjB,CAA1B;AACD,GAH8B,EAI/B,CAAClB,cAAD,EAAiBD,QAAjB,CAJ+B,CAAjC;AAMA,SAAO,CAACC,cAAc,GAAGkB,UAAU,CAAClB,cAAc,CAACK,EAAhB,CAAb,GAAmCO,SAAlD,EAA6DO,aAA7D,CAAP;AACD;;IAXeF,a;UACG9C,W,EACQ2B,iB,EACN1B,W;;;AAUrB,OAAO,SAASgD,eAAT,GAA6G;AAAA;;AAClH,QAAM,CAACpB,cAAD,IAAmBF,iBAAiB,EAA1C;AAEA,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAMkD,SAAS,GAAGjD,WAAW,CAAoD6B,KAAD,IAAW;AACzF,WAAOA,KAAK,CAACC,UAAN,CAAiBoB,YAAxB;AACD,GAF4B,CAA7B;AAGA,QAAMC,eAAe,GAAG7C,WAAW,CAChC4C,YAAD,IAA8C;AAC5CtB,IAAAA,cAAc,IAAID,QAAQ,CAAChC,kBAAkB,CAAC;AAAEqC,MAAAA,UAAU,EAAEJ,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEK,EAA9B;AAAkCiB,MAAAA;AAAlC,KAAD,CAAnB,CAA1B;AACD,GAHgC,EAIjC,CAACtB,cAAD,EAAiBD,QAAjB,CAJiC,CAAnC;AAMA,SAAO,CAACC,cAAc,GAAGqB,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAGrB,cAAc,CAACK,EAAlB,CAAZ,GAAoCO,SAAnD,EAA8DW,eAA9D,CAAP;AACD;;IAdeH,e;UACWtB,iB,EAER3B,W,EACCC,W;;;AAYpB,OAAO,SAASoD,oBAAT,GAGL;AAAA;;AACA,QAAM,CAACxB,cAAD,IAAmBF,iBAAiB,EAA1C;AAEA,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAMkD,SAAS,GAAGjD,WAAW,CAAyD6B,KAAD,IAAW;AAC9F,WAAOA,KAAK,CAACC,UAAN,CAAiBuB,iBAAxB;AACD,GAF4B,CAA7B;AAGA,QAAMC,oBAAoB,GAAGhD,WAAW,CACrC+C,iBAAD,IAAmD;AACjDzB,IAAAA,cAAc,IAAID,QAAQ,CAAC/B,uBAAuB,CAAC;AAAEoC,MAAAA,UAAU,EAAEJ,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEK,EAA9B;AAAkCoB,MAAAA;AAAlC,KAAD,CAAxB,CAA1B;AACD,GAHqC,EAItC,CAACzB,cAAD,EAAiBD,QAAjB,CAJsC,CAAxC;AAMA,SAAO,CAACC,cAAc,GAAGqB,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAGrB,cAAc,CAACK,EAAlB,CAAZ,GAAoCO,SAAnD,EAA8Dc,oBAA9D,CAAP;AACD;;IAjBeF,oB;UAIW1B,iB,EAER3B,W,EACCC,W;;;AA6CpB;AACA;AACA;AACA,OAAO,SAASuD,oBAAT,GAAsD;AAAA;;AAC3D,QAAM,CAAC3B,cAAD,IAAmBF,iBAAiB,EAA1C;AAEA,QAAM8B,WAAW,GAAGhC,6BAA6B,EAAjD;AACA,QAAMiC,WAAW,GAAGhC,6BAA6B,EAAjD;;AAEA,MACEG,cAAc,KAAK3B,mBAAnB,IACA2B,cAAc,KAAK1B,gBADnB,IAEA0B,cAAc,KAAKzB,kBAHrB,EAIE;AACA,WAAOsD,WAAP;AACD;;AAED,SAAOD,WAAP;AACD;;IAfeD,oB;UACW7B,iB,EAELF,6B,EACAC,6B;;;AAatB,OAAO,SAASiC,iBAAT,CAA2BzB,EAA3B,EAA2D;AAAA;;AAChE,QAAM0B,WAAW,GAAGJ,oBAAoB,EAAxC;AACA,QAAMK,OAAO,GAAGnD,SAAS,EAAzB;AACA,SAAOkD,WAAW,GAAG1C,sBAAsB,CAAC0C,WAAW,CAACC,OAAO,GAAGC,QAAQ,CAAC5B,EAAD,CAAX,GAAkB4B,QAAQ,CAAC5B,EAAD,CAAR,GAAe,CAAzC,CAAZ,CAAzB,GAAoFO,SAAtG;AACD;;IAJekB,iB;UACMH,oB,EACJ9C,S;;;AAIlB,OAAO,SAASqD,eAAT,GAAuE;AAAA;;AAC5E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B5D,QAAQ,EAA1C,CAD4E,CAG5E;;AACA,QAAM6D,SAAS,GAAGlD,iBAAiB,EAAnC;AACA,QAAMmD,QAAQ,GAAG7B,kBAAkB,EAAnC;AACA,QAAM,CAACT,cAAD,IAAmBF,iBAAiB,EAA1C;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd2D,IAAAA,YAAY,CAACxB,SAAD,CAAZ;AACD,GAFQ,EAEN,CAACZ,cAAD,CAFM,CAAT,CAR4E,CAY5E;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8D,SAAf,GAA2B;AACzB,UAAI;AACF,YAAID,QAAQ,IAAItC,cAAhB,EAAgC;AAC9BZ,UAAAA,cAAc,CAACiD,SAAD,EAAYC,QAAQ,CAACE,OAArB,EAA8BxC,cAAc,CAACK,EAA7C,CAAd,CAA+DoC,IAA/D,CAAqEzB,IAAD,IAAiC;AACnG,gBAAIA,IAAJ,EAAU;AACR,oBAAM0B,WAAW,GAAG1B,IAAI,CAAC2B,MAAL,CAA4C,CAACC,KAAD,EAAQC,QAAR,KAAmC;AACjGD,gBAAAA,KAAK,CAACC,QAAQ,CAACxC,EAAV,CAAL,GAAqBwC,QAArB;AACA,uBAAOD,KAAP;AACD,eAHmB,EAGjB,EAHiB,CAApB;AAIAR,cAAAA,YAAY,CAACM,WAAD,CAAZ;AACD;AACF,WARD;AASD;AACF,OAZD,CAYE,OAAOI,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AACD,QAAI,CAACX,SAAD,IAAcG,QAAlB,EAA4B;AAC1BC,MAAAA,SAAS;AACV;AACF,GArBQ,EAqBN,CAACvC,cAAD,EAAiBqC,SAAjB,EAA4BC,QAA5B,EAAsCH,SAAtC,CArBM,CAAT;AAuBA1D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0D,SAAS,IAAIG,QAAjB,EAA2B;AACzBW,MAAAA,MAAM,CAACC,MAAP,CAAcf,SAAd,EAAyBgB,GAAzB,CAA8BC,CAAD,IAAO;AAClCA,QAAAA,CAAC,CAACC,QAAF,GAAaD,CAAC,CAACE,QAAF,CAAWX,MAAX,CAAkB,CAACC,KAAD,EAAQW,IAAR,KAAiBX,KAAK,GAAGY,UAAU,CAACD,IAAI,CAACE,KAAN,CAArD,EAAmE,CAAnE,CAAb;AACAL,QAAAA,CAAC,CAACM,YAAF,GAAiBN,CAAC,CAACO,YAAF,CAAehB,MAAf,CAAsB,CAACC,KAAD,EAAQW,IAAR,KAAiBX,KAAK,GAAGY,UAAU,CAACD,IAAI,CAACE,KAAN,CAAzD,EAAuE,CAAvE,CAAjB;AACA,eAAO,IAAP;AACD,OAJD;AAKD;AACF,GARQ,EAQN,CAACnB,QAAD,EAAWH,SAAX,CARM,CAAT;AAUA,SAAOA,SAAP;AACD;;KA/CeD,e;UAII/C,iB,EACDsB,kB,EACQX,iB;;;AA2C3B,OAAO,SAAS8D,eAAT,CAAyBvD,EAAzB,EAA+D;AAAA;;AACpE,QAAMwD,eAAe,GAAG3B,eAAe,EAAvC;AACA,SAAO2B,eAAP,aAAOA,eAAP,uBAAOA,eAAe,CAAGxD,EAAH,CAAtB;AACD,C,CAED;;KALgBuD,e;UACU1B,e;;;AAK1B,OAAO,SAAS4B,gBAAT,CAA0BtB,OAA1B,EAA2F;AAAA;;AAChG,QAAM;AAAEuB,IAAAA;AAAF,MAAchF,kBAAkB,EAAtC;AACA,QAAMiF,aAAa,GAAGpF,mBAAmB,EAAzC;AACA,QAAMqF,MAAM,GAAGpF,SAAS,EAAxB;AACA,QAAMqF,YAAY,GAAG1B,OAAO,GAAGA,OAAH,GAAauB,OAAzC;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAarF,mBAAmB,CACpCkF,aADoC,EAEpCC,MAAM,GAAG,oBAAH,GAA0B,WAFI,EAGpCA,MAAM,GAAG,CAACC,YAAD,aAACA,YAAD,cAACA,YAAD,GAAiBtD,SAAjB,EAA4B,CAA5B,CAAH,GAAoC,CAACsD,YAAD,aAACA,YAAD,cAACA,YAAD,GAAiBtD,SAAjB,CAHN,CAAtC;AAMA,QAAMwD,gBAAgB,GAAGnF,SAAS,CAACkF,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAG,CAAH,CAAP,CAAlC;AAEA,SAAOC,gBAAgB,KAAK,KAArB,GAA6BA,gBAA7B,GAAgDxD,SAAvD;AACD,C,CAED;;KAjBgBkD,gB;UACM/E,kB,EACEH,mB,EACPC,S,EAGIC,mB;;;AAYrB,OAAO,SAASuF,YAAT,GAAiD;AAAA;;AAAA;;AACtD,QAAM;AAAEN,IAAAA;AAAF,MAAchF,kBAAkB,EAAtC;AACA,QAAMuF,gBAAgB,GAAG1F,mBAAmB,EAA5C;AAEA,QAAM0D,QAAQ,GAAG7B,kBAAkB,EAAnC;AACA,QAAMuB,OAAO,GAAGnD,SAAS,EAAzB,CALsD,CAOtD;;AACA,QAAM4E,KAAK,2BAAG3E,mBAAmB,CAC/BwF,gBAD+B,EAE/BtC,OAAO,GAAG,iBAAH,GAAuB,iBAFC,EAG/BA,OAAO,GAAG,CAAC+B,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYnD,SAAZ,EAAuB,CAAvB,CAAH,GAA+B,CAACmD,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYnD,SAAZ,CAHP,CAAtB,kFAAG,qBAIXuD,MAJQ,0DAAG,sBAIF,CAJE,CAAd;AAKA,SAAOV,KAAK,IAAInB,QAAT,GAAoB,IAAI1E,WAAJ,CAAgB0E,QAAhB,EAA0BmB,KAA1B,CAApB,GAAuD7C,SAA9D;AACD,C,CAED;;KAhBgByD,Y;UACMtF,kB,EACKH,mB,EAER6B,kB,EACD5B,S,EAGFC,mB;;;AAShB,OAAO,SAASyF,qBAAT,CAA+BC,KAA/B,EAAmF;AAAA;;AAAA;;AACxF,QAAM;AAAET,IAAAA;AAAF,MAAchF,kBAAkB,EAAtC;AACA,QAAMuF,gBAAgB,GAAG1F,mBAAmB,EAA5C;AAEA,QAAM0D,QAAQ,GAAG7B,kBAAkB,EAAnC;AACA,QAAMwD,MAAM,GAAGpF,SAAS,EAAxB,CALwF,CAOxF;;AACA,QAAM4E,KAAK,4BAAG3E,mBAAmB,CAC/BwF,gBAD+B,EAE/BL,MAAM,GAAG,iBAAH,GAAuB,eAFE,EAG/BA,MAAM,GAAG,CAACF,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYnD,SAAZ,EAAuB4D,KAAvB,aAAuBA,KAAvB,cAAuBA,KAAvB,GAAgC5D,SAAhC,EAA2C,CAA3C,CAAH,GAAmD,CAACmD,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYnD,SAAZ,EAAuB4D,KAAvB,aAAuBA,KAAvB,cAAuBA,KAAvB,GAAgC5D,SAAhC,CAH1B,CAAtB,mFAAG,sBAIXuD,MAJQ,0DAAG,sBAIF,CAJE,CAAd;AAKA,SAAOV,KAAK,IAAInB,QAAT,GAAoB,IAAI1E,WAAJ,CAAgB0E,QAAhB,EAA0BmB,KAA1B,CAApB,GAAuD7C,SAA9D;AACD;;KAde2D,qB;UACMxF,kB,EACKH,mB,EAER6B,kB,EACF5B,S,EAGDC,mB;;;AAQhB,OAAO,SAAS2F,mBAAT,GAA+F;AAAA;;AACpG,QAAM;AAAEV,IAAAA,OAAF;AAAWrD,IAAAA,OAAX;AAAoBgE,IAAAA;AAApB,MAAgC3F,kBAAkB,EAAxD;AACA,QAAM4F,cAAc,GAAG3F,mBAAmB,EAA1C;AAEA,QAAMsF,gBAAgB,GAAG1F,mBAAmB,EAA5C;AAEA,SAAOF,WAAW,CACfkG,SAAD,IAAmC;AACjC,QAAI,CAACF,OAAD,IAAY,CAAChE,OAAb,IAAwB,CAACqD,OAAzB,IAAoC,CAAC9E,SAAS,CAAC2F,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,EAAd,CAAlD,EAAqE,OAAOhE,SAAP;AACrE,UAAMiE,IAAI,GAAG,CAACD,SAAD,CAAb;AACA,QAAI,CAACN,gBAAL,EAAuB,MAAM,IAAIQ,KAAJ,CAAU,yBAAV,CAAN;AACvB,WAAOR,gBAAgB,CAACS,WAAjB,CAA6BC,QAA7B,CAAsC,GAAGH,IAAzC,EAA+C,EAA/C,EAAmDpC,IAAnD,CAAyDwC,iBAAD,IAAuB;AACpF,aAAOX,gBAAgB,CACpBU,QADI,CACK,GAAGH,IADR,EACc;AAAEK,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,QAAQ,EAAEjG,kBAAkB,CAAC+F,iBAAD;AAA3C,OADd,EAEJxC,IAFI,CAEE2C,QAAD,IAAmC;AACvCT,QAAAA,cAAc,CAACS,QAAD,EAAW;AACvBC,UAAAA,OAAO,EAAG;AADa,SAAX,CAAd;AAGA,eAAOD,QAAQ,CAACE,IAAhB;AACD,OAPI,CAAP;AAQD,KATM,CAAP;AAUD,GAfe,EAgBhB,CAACvB,OAAD,EAAUY,cAAV,EAA0BjE,OAA1B,EAAmCgE,OAAnC,EAA4CJ,gBAA5C,CAhBgB,CAAlB;AAkBD;;KAxBeG,mB;UACwB1F,kB,EACfC,mB,EAEEJ,mB;;;AAsB3B,OAAO,SAAS2G,eAAT,GAEL;AAAA;;AACA,QAAM;AAAExB,IAAAA;AAAF,MAAchF,kBAAkB,EAAtC;AAEA,QAAMyG,WAAW,GAAG7G,qBAAqB,EAAzC;AACA,QAAMgG,cAAc,GAAG3F,mBAAmB,EAA1C;AACA,QAAMyG,SAAS,GAAG5G,SAAS,EAA3B;AAEA,QAAM6G,YAAY,GAAGhH,WAAW,CAC9B,CAACiH,UAAD,EAAiCC,OAAjC,KAAsD;AACpD,QAAI,CAAC7B,OAAD,IAAY,CAACyB,WAAb,IAA4B,CAACG,UAAjC,EAA6C;AAC7C,UAAMd,IAAI,GAAG,CAACc,UAAD,EAAaC,OAAb,CAAb;;AACA,QAAIH,SAAJ,EAAe;AACb,aAAOD,WAAW,CAACT,WAAZ,CAAwBc,UAAxB,CAAmC,GAAGhB,IAAtC,EAA4C,EAA5C,EAAgDpC,IAAhD,CAAsDwC,iBAAD,IAAuB;AACjF,eAAOO,WAAW,CACfK,UADI,CACO,GAAGhB,IADV,EACgB;AAAEK,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,QAAQ,EAAEjG,kBAAkB,CAAC+F,iBAAD;AAA3C,SADhB,EAEJxC,IAFI,CAEE2C,QAAD,IAAmC;AACvCT,UAAAA,cAAc,CAACS,QAAD,EAAW;AACvBC,YAAAA,OAAO,EAAG,SAAQO,OAAO,GAAG,MAAH,GAAY,SAAU,aAAYD,UAAW;AAD/C,WAAX,CAAd;AAGA,iBAAOP,QAAQ,CAACE,IAAhB;AACD,SAPI,CAAP;AAQD,OATM,CAAP;AAUD,KAXD,MAWO;AACL,aAAOE,WAAW,CAACT,WAAZ,CAAwBe,QAAxB,CAAiC,GAAGjB,IAApC,EAA0C,EAA1C,EAA8CpC,IAA9C,CAAoDwC,iBAAD,IAAuB;AAC/E,eAAOO,WAAW,CACfM,QADI,CACK,GAAGjB,IADR,EACc;AAAEK,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,QAAQ,EAAEjG,kBAAkB,CAAC+F,iBAAD;AAA3C,SADd,EAEJxC,IAFI,CAEE2C,QAAD,IAAmC;AACvCT,UAAAA,cAAc,CAACS,QAAD,EAAW;AACvBC,YAAAA,OAAO,EAAG,SAAQO,OAAO,GAAG,MAAH,GAAY,SAAU,aAAYD,UAAW;AAD/C,WAAX,CAAd;AAGA,iBAAOP,QAAQ,CAACE,IAAhB;AACD,SAPI,CAAP;AAQD,OATM,CAAP;AAUD;AACF,GA3B6B,EA4B9B,CAACvB,OAAD,EAAUY,cAAV,EAA0Ba,WAA1B,EAAuCC,SAAvC,CA5B8B,CAAhC;AA8BA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD;;KAxCeH,e;UAGMxG,kB,EAEAJ,qB,EACGK,mB,EACLH,S;;;AAmCpB,OAAO,SAASkH,uBAAT,CACLC,UADK,EAELJ,OAFK,EAUO;AAAA;;AACZ,QAAMK,cAAc,GAAG9G,iBAAiB,EAAxC;AAEA,QAAM,CAAC+G,MAAD,EAASC,SAAT,IAAsB3H,QAAQ,EAApC;AAUAC,EAAAA,SAAS,CAAC,MAAM;AACd0H,IAAAA,SAAS,CAACvF,SAAD,CAAT;AACD,GAFQ,EAEN,CAACoF,UAAD,EAAaC,cAAb,CAFM,CAAT;AAIAxH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8D,SAAf,GAA2B;AACzB0D,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CACVG,KADJ,CACU;AACNA,QAAAA,KAAK,EAAE9G,UADD;AAEN+G,QAAAA,SAAS,EAAE;AACTL,UAAAA,UADS;AAETJ,UAAAA;AAFS;AAFL,OADV,EAQGnD,IARH,CASK6D,GAAD,IASM;AACJH,QAAAA,SAAS,CAACG,GAAG,CAACtF,IAAJ,CAASyC,KAAV,CAAT;AACD,OApBL;AAsBD;;AACD,QAAI,CAACyC,MAAL,EAAa;AACX3D,MAAAA,SAAS;AACV;AACF,GA5BQ,CAAT;AA8BA,SAAO2D,MAAP;AACD;;KA1DeH,uB;UAWS5G,iB;;;AAwFzB;AACA,OAAO,SAASoH,eAAT,CAAyB/D,OAAzB,EAAuF;AAAA;;AAC5F,QAAM;AAAEkC,IAAAA;AAAF,MAAc3F,kBAAkB,EAAtC;AACA,QAAMyH,MAAM,GAAGrH,iBAAiB,EAAhC;AAEA,QAAM,CAAC6B,IAAD,EAAOyF,OAAP,IAAkBjI,QAAQ,EAAhC;AAEA,QAAMkI,KAAK,GAAGjH,QAAQ,CAAC+C,OAAD,CAAtB;AAEA,QAAM,CAACxC,cAAD,IAAmBF,iBAAiB,EAA1C,CAR4F,CAU5F;;AACA,QAAM6G,WAAW,GAAGhH,WAAW,CAAC6C,OAAD,CAA/B;AACA,QAAMoE,YAAY,GAAGjH,WAAW,CAACK,cAAD,CAAhC;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAKkI,WAAW,KAAKnE,OAAhB,IAA2B,CAAC,CAACmE,WAA7B,IAA4C,CAAC,CAACnE,OAA/C,IAA2DoE,YAAY,KAAK5G,cAAhF,EAAgG;AAC9FyG,MAAAA,OAAO,CAAC7F,SAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACZ,cAAD,EAAiBwC,OAAjB,EAA0BmE,WAA1B,EAAuCC,YAAvC,CAJM,CAAT;AAMAnI,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8D,SAAf,GAA2B;AACzBiE,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CACFJ,KADJ,CACU;AACNA,QAAAA,KAAK,EAAE7G,aADD;AAEN8G,QAAAA,SAAS,EAAE;AACT7D,UAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEqE,iBAAT;AADA;AAFL,OADV,EAOGpE,IAPH,CAOQ,MAAO6D,GAAP,IAAgC;AAAA;;AACpC,YAAIA,GAAG,IAAIA,GAAG,CAACtF,IAAX,kBAAmBsF,GAAG,CAACtF,IAAvB,8CAAmB,UAAUK,SAAV,CAAoB,CAApB,CAAnB,CAAJ,EAA+C;AAAA;;AAC7C,gBAAMyF,MAAM,GAAG,OAAMpC,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEqC,OAAT,CAAiBT,GAAG,CAACtF,IAAJ,CAASK,SAAT,CAAmB,CAAnB,EAAsBhB,EAAvC,CAAN,CAAf;AACA,gBAAM2G,OAAO,GAAGV,GAAG,CAACtF,IAAJ,CAASK,SAAT,CAAmB,CAAnB,CAAhB;;AAEA,cAAI,CAAC2F,OAAL,EAAc;AACZP,YAAAA,OAAO,CAAC;AACNQ,cAAAA,cAAc,EAAE,CADV;AAENC,cAAAA,iBAAiB,EAAE,CAFb;AAGNC,cAAAA,6BAA6B,EAAE,CAHzB;AAIN1D,cAAAA,KAAK,EAAE,EAJD;AAKN2D,cAAAA,GAAG,EAAEV,KALC;AAMNW,cAAAA,UAAU,EAAEP,MAAM,KAAKpH;AANjB,aAAD,CAAP;AAQD;;AAED,gBAAM+D,KAAK,GAAGuD,OAAO,GACjBA,OAAO,CAACvD,KAAR,CACE;AADF,WAEG6D,IAFH,CAEQ,CAACC,CAAD,EAAIC,CAAJ,KAAWvF,QAAQ,CAACsF,CAAC,CAAC1E,QAAF,CAAWxC,EAAZ,CAAR,GAA0B4B,QAAQ,CAACuF,CAAC,CAAC3E,QAAF,CAAWxC,EAAZ,CAAlC,GAAoD,CAApD,GAAwD,CAAC,CAF5E,EAGG8C,GAHH,CAGQsE,CAAD,KAAuE;AAC1E5E,YAAAA,QAAQ,EAAEZ,QAAQ,CAACwF,CAAC,CAAC5E,QAAF,CAAWxC,EAAZ,CADwD;AAE1EoD,YAAAA,KAAK,EAAED,UAAU,CAACiE,CAAC,CAAChE,KAAH,CAFyD;AAG1EmC,YAAAA,OAAO,EAAE6B,CAAC,CAAC7B;AAH+D,WAAvE,CAHP,CADiB,GASjB,EATJ;AAUAa,UAAAA,OAAO,CAAC;AACNQ,YAAAA,cAAc,EAAEzD,UAAU,0BAACwD,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEC,cAAV,yEAA4B,GAA5B,CADpB;AAENC,YAAAA,iBAAiB,EAAEjF,QAAQ,2BAAC+E,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,iBAAV,2EAA+B,GAA/B,CAFrB;AAGNC,YAAAA,6BAA6B,2BAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,6BAAX,yEAA4C,CAHnE;AAIN1D,YAAAA,KAJM;AAKN2D,YAAAA,GAAG,EAAEV,KALC;AAMNW,YAAAA,UAAU,EAAEP,MAAM,KAAKpH;AANjB,WAAD,CAAP;AAQD,SAjCD,MAiCO;AACL+G,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,OA5CH,EA6CGiB,KA7CH,CA6CU5E,CAAD,IAAO;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OA/CH;AAgDD;;AACD,QAAI,CAAC9B,IAAD,IAASwB,OAAT,IAAoBkC,OAAxB,EAAiC;AAC/BnC,MAAAA,SAAS;AACV;AACF,GAtDQ,EAsDN,CAACC,OAAD,EAAUgE,MAAV,EAAkBxF,IAAlB,EAAwB0F,KAAxB,EAA+BhC,OAA/B,CAtDM,CAAT;AAwDA,SAAO1D,IAAP;AACD;;KA5EeuF,e;UACMxH,kB,EACLI,iB,EAIDM,Q,EAEWK,iB,EAGLH,W,EACCA,W","sourcesContent":["import { updateLastSelectedProtocolID } from './../user/actions'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { TokenAmount, Token, Percent } from '@uniswap/sdk'\nimport {\n  updateActiveProtocol,\n  updateFilterActive,\n  updateTopDelegates,\n  updateVerifiedDelegates,\n  updateGlobalData,\n  updateMaxFetched,\n} from './actions'\nimport { AppDispatch, AppState } from './../index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GovernanceInfo, GlobaData, COMPOUND_GOVERNANCE, NOUNS_GOVERNANCE, UNISWAP_GOVERNANCE } from './reducer'\nimport { useState, useEffect, useCallback } from 'react'\nimport { useGovernanceContract, useGovTokenContract, useIsAave } from '../../hooks/useContract'\nimport { useSingleCallResult } from '../multicall/hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useTransactionAdder } from '../transactions/hooks'\nimport { isAddress, calculateGasMargin } from '../../utils'\nimport { useSubgraphClient } from '../application/hooks'\nimport { fetchProposals, enumerateProposalState } from '../../data/governance'\nimport { ALL_VOTERS, DELEGATE_INFO } from '../../apollo/queries'\nimport { deserializeToken } from '../user/hooks'\nimport { useIsEOA } from '../../hooks/useIsEOA'\nimport { AUTONOMOUS_PROPOSAL_BYTECODE } from '../../constants/proposals'\nimport usePrevious from '../../hooks/usePrevious'\nimport { useGenericAlphaProposalStates, useGenericBravoProposalStates } from 'data/proposalStates'\n\nexport interface DelegateData {\n  id: string\n  delegatedVotes: number\n  delegatedVotesRaw: number\n  votePercent: Percent\n  votes: {\n    id: string\n    support: boolean\n    votes: number\n  }[]\n  EOA: boolean | undefined //\n  autonomous: boolean | undefined\n  handle: string | undefined // twitter handle\n  imageURL?: string | undefined\n}\n\nexport function useActiveProtocol(): [GovernanceInfo | undefined, (activeProtocol: GovernanceInfo) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const activeProtocol = useSelector<AppState, AppState['governance']['activeProtocol']>((state) => {\n    return state.governance.activeProtocol\n  })\n\n  const setActiveProtocol = useCallback(\n    (activeProtocol: GovernanceInfo) => {\n      dispatch(updateActiveProtocol({ activeProtocol }))\n      dispatch(updateLastSelectedProtocolID({ protocolID: activeProtocol.id }))\n    },\n    [dispatch]\n  )\n  return [activeProtocol, setActiveProtocol]\n}\n\nexport function useFilterActive(): [boolean, (filterActive: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const filterActive = useSelector<AppState, AppState['governance']['filterActive']>((state) => {\n    return state.governance.filterActive\n  })\n\n  const setFilterActive = useCallback(\n    (filterActive: boolean) => {\n      dispatch(updateFilterActive({ filterActive }))\n    },\n    [dispatch]\n  )\n  return [filterActive, setFilterActive]\n}\n\nexport function useGovernanceToken(): Token | undefined {\n  const { chainId } = useActiveWeb3React()\n  const [activeProtocol] = useActiveProtocol()\n  return chainId && activeProtocol ? deserializeToken(activeProtocol.token) : undefined\n}\n\n// @todo add typed query response\nexport function useGlobalData(): [GlobaData | undefined, (data: GlobaData | undefined) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const [activeProtocol] = useActiveProtocol()\n\n  const globalData = useSelector<AppState, AppState['governance']['globalData']>((state) => state.governance.globalData)\n\n  const setGlobalData = useCallback(\n    (data: GlobaData | undefined) => {\n      activeProtocol && dispatch(updateGlobalData({ protocolID: activeProtocol.id, data }))\n    },\n    [activeProtocol, dispatch]\n  )\n\n  return [activeProtocol ? globalData[activeProtocol.id] : undefined, setGlobalData]\n}\n\nexport function useMaxFetched(): [number | undefined, (maxFetched: number | undefined) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const [activeProtocol] = useActiveProtocol()\n  const maxFetched = useSelector<AppState, AppState['governance']['maxFetched']>((state) => state.governance.maxFetched)\n  const setMaxFetched = useCallback(\n    (maxFetched: number | undefined) => {\n      activeProtocol && dispatch(updateMaxFetched({ protocolID: activeProtocol.id, maxFetched }))\n    },\n    [activeProtocol, dispatch]\n  )\n  return [activeProtocol ? maxFetched[activeProtocol.id] : undefined, setMaxFetched]\n}\n\nexport function useTopDelegates(): [DelegateData[] | undefined, (topDelegates: DelegateData[] | undefined) => void] {\n  const [activeProtocol] = useActiveProtocol()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const delegates = useSelector<AppState, AppState['governance']['topDelegates']>((state) => {\n    return state.governance.topDelegates\n  })\n  const setTopDelegates = useCallback(\n    (topDelegates: DelegateData[] | undefined) => {\n      activeProtocol && dispatch(updateTopDelegates({ protocolID: activeProtocol?.id, topDelegates }))\n    },\n    [activeProtocol, dispatch]\n  )\n  return [activeProtocol ? delegates?.[activeProtocol.id] : undefined, setTopDelegates]\n}\n\nexport function useVerifiedDelegates(): [\n  DelegateData[] | undefined,\n  (verifiedDelegates: DelegateData[] | undefined) => void\n] {\n  const [activeProtocol] = useActiveProtocol()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const delegates = useSelector<AppState, AppState['governance']['verifiedDelegates']>((state) => {\n    return state.governance.verifiedDelegates\n  })\n  const setVerifiedDelegates = useCallback(\n    (verifiedDelegates: DelegateData[] | undefined) => {\n      activeProtocol && dispatch(updateVerifiedDelegates({ protocolID: activeProtocol?.id, verifiedDelegates }))\n    },\n    [activeProtocol, dispatch]\n  )\n  return [activeProtocol ? delegates?.[activeProtocol.id] : undefined, setVerifiedDelegates]\n}\n\ninterface ProposalDetail {\n  target: string\n  functionSig: string\n  callData: string\n}\n\nexport interface ProposalData {\n  id: string\n  title: string\n  description: string\n  proposer: string\n  status: string\n  forCount: number | undefined\n  againstCount: number | undefined\n  startBlock: number\n  endBlock: number\n  details: ProposalDetail[]\n  forVotes: {\n    support: boolean\n    votes: string\n    voter: {\n      id: string\n    }\n  }[]\n  againstVotes: {\n    support: boolean\n    votes: string\n    voter: {\n      id: string\n    }\n  }[]\n}\n\n/**\n * @TODO can this be used to speed up the loading?\n */\nexport function useAllProposalStates(): number[] | undefined {\n  const [activeProtocol] = useActiveProtocol()\n\n  const alphaStates = useGenericAlphaProposalStates()\n  const bravoStates = useGenericBravoProposalStates()\n\n  if (\n    activeProtocol === COMPOUND_GOVERNANCE ||\n    activeProtocol === NOUNS_GOVERNANCE ||\n    activeProtocol === UNISWAP_GOVERNANCE\n  ) {\n    return bravoStates\n  }\n\n  return alphaStates\n}\n\nexport function useProposalStatus(id: string): string | undefined {\n  const allStatuses = useAllProposalStates()\n  const isAaave = useIsAave()\n  return allStatuses ? enumerateProposalState(allStatuses[isAaave ? parseInt(id) : parseInt(id) - 1]) : undefined\n}\n\nexport function useAllProposals(): { [id: string]: ProposalData } | undefined {\n  const [proposals, setProposals] = useState<{ [id: string]: ProposalData } | undefined>()\n\n  // get subgraph client for active protocol\n  const govClient = useSubgraphClient()\n  const govToken = useGovernanceToken()\n  const [activeProtocol] = useActiveProtocol()\n\n  useEffect(() => {\n    setProposals(undefined)\n  }, [activeProtocol])\n\n  // subgraphs only store ids in lowercase, format\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (govToken && activeProtocol) {\n          fetchProposals(govClient, govToken.address, activeProtocol.id).then((data: ProposalData[] | null) => {\n            if (data) {\n              const proposalMap = data.reduce<{ [id: string]: ProposalData }>((accum, proposal: ProposalData) => {\n                accum[proposal.id] = proposal\n                return accum\n              }, {})\n              setProposals(proposalMap)\n            }\n          })\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!proposals && govToken) {\n      fetchData()\n    }\n  }, [activeProtocol, govClient, govToken, proposals])\n\n  useEffect(() => {\n    if (proposals && govToken) {\n      Object.values(proposals).map((p) => {\n        p.forCount = p.forVotes.reduce((accum, vote) => accum + parseFloat(vote.votes), 0)\n        p.againstCount = p.againstVotes.reduce((accum, vote) => accum + parseFloat(vote.votes), 0)\n        return true\n      })\n    }\n  }, [govToken, proposals])\n\n  return proposals\n}\n\nexport function useProposalData(id: string): ProposalData | undefined {\n  const allProposalData = useAllProposals()\n  return allProposalData?.[id]\n}\n\n// get the users delegatee if it exists\nexport function useUserDelegatee(address?: string | undefined | null | false): string | undefined {\n  const { account } = useActiveWeb3React()\n  const tokenContract = useGovTokenContract()\n  const isAave = useIsAave()\n  const accountToUse = address ? address : account\n\n  const { result } = useSingleCallResult(\n    tokenContract,\n    isAave ? 'getDelegateeByType' : 'delegates',\n    isAave ? [accountToUse ?? undefined, 0] : [accountToUse ?? undefined]\n  )\n\n  const formattedAddress = isAddress(result?.[0])\n\n  return formattedAddress !== false ? formattedAddress : undefined\n}\n\n// gets the users current votes\nexport function useUserVotes(): TokenAmount | undefined {\n  const { account } = useActiveWeb3React()\n  const govTokenContract = useGovTokenContract()\n\n  const govToken = useGovernanceToken()\n  const isAaave = useIsAave()\n\n  // check for available votes\n  const votes = useSingleCallResult(\n    govTokenContract,\n    isAaave ? 'getPowerCurrent' : 'getCurrentVotes',\n    isAaave ? [account ?? undefined, 0] : [account ?? undefined]\n  )?.result?.[0]\n  return votes && govToken ? new TokenAmount(govToken, votes) : undefined\n}\n\n// fetch available votes as of block (usually proposal start block)\nexport function useUserVotesAsOfBlock(block: number | undefined): TokenAmount | undefined {\n  const { account } = useActiveWeb3React()\n  const govTokenContract = useGovTokenContract()\n\n  const govToken = useGovernanceToken()\n  const isAave = useIsAave()\n\n  // check for available votes\n  const votes = useSingleCallResult(\n    govTokenContract,\n    isAave ? 'getPowerAtBlock' : 'getPriorVotes',\n    isAave ? [account ?? undefined, block ?? undefined, 0] : [account ?? undefined, block ?? undefined]\n  )?.result?.[0]\n  return votes && govToken ? new TokenAmount(govToken, votes) : undefined\n}\n\nexport function useDelegateCallback(): (delegatee: string | undefined) => undefined | Promise<string> {\n  const { account, chainId, library } = useActiveWeb3React()\n  const addTransaction = useTransactionAdder()\n\n  const govTokenContract = useGovTokenContract()\n\n  return useCallback(\n    (delegatee: string | undefined) => {\n      if (!library || !chainId || !account || !isAddress(delegatee ?? '')) return undefined\n      const args = [delegatee]\n      if (!govTokenContract) throw new Error('No Governance Contract!')\n      return govTokenContract.estimateGas.delegate(...args, {}).then((estimatedGasLimit) => {\n        return govTokenContract\n          .delegate(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              summary: `Delegated votes`,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, chainId, library, govTokenContract]\n  )\n}\n\nexport function useVoteCallback(): {\n  voteCallback: (proposalId: string | undefined, support: boolean) => undefined | Promise<string>\n} {\n  const { account } = useActiveWeb3React()\n\n  const govContract = useGovernanceContract()\n  const addTransaction = useTransactionAdder()\n  const isAaveGov = useIsAave()\n\n  const voteCallback = useCallback(\n    (proposalId: string | undefined, support: boolean) => {\n      if (!account || !govContract || !proposalId) return\n      const args = [proposalId, support]\n      if (isAaveGov) {\n        return govContract.estimateGas.submitVote(...args, {}).then((estimatedGasLimit) => {\n          return govContract\n            .submitVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n            .then((response: TransactionResponse) => {\n              addTransaction(response, {\n                summary: `Voted ${support ? 'for ' : 'against'} proposal ${proposalId}`,\n              })\n              return response.hash\n            })\n        })\n      } else {\n        return govContract.estimateGas.castVote(...args, {}).then((estimatedGasLimit) => {\n          return govContract\n            .castVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n            .then((response: TransactionResponse) => {\n              addTransaction(response, {\n                summary: `Voted ${support ? 'for ' : 'against'} proposal ${proposalId}`,\n              })\n              return response.hash\n            })\n        })\n      }\n    },\n    [account, addTransaction, govContract, isAaveGov]\n  )\n  return { voteCallback }\n}\n\nexport function useAllVotersForProposal(\n  proposalID: string,\n  support: boolean\n):\n  | {\n      votes: string\n      voter: {\n        id: string\n      }\n    }[]\n  | undefined {\n  const subgraphClient = useSubgraphClient()\n\n  const [voters, setVoters] = useState<\n    | {\n        votes: string\n        voter: {\n          id: string\n        }\n      }[]\n    | undefined\n  >()\n\n  useEffect(() => {\n    setVoters(undefined)\n  }, [proposalID, subgraphClient])\n\n  useEffect(() => {\n    async function fetchData() {\n      subgraphClient\n        ?.query({\n          query: ALL_VOTERS,\n          variables: {\n            proposalID,\n            support,\n          },\n        })\n        .then(\n          (res: {\n            data: {\n              votes: {\n                votes: string\n                voter: {\n                  id: string\n                }\n              }[]\n            }\n          }) => {\n            setVoters(res.data.votes)\n          }\n        )\n    }\n    if (!voters) {\n      fetchData()\n    }\n  })\n\n  return voters\n}\n\nexport interface DelegateInfo {\n  // amount of votes delegated to them\n  delegatedVotes: number\n  delegatedVotesRaw: number\n\n  // amount of delegates they represent\n  tokenHoldersRepresentedAmount: number\n\n  // proposals theyve voted on\n  votes: {\n    proposal: number\n    votes: number\n    support: boolean\n  }[]\n\n  EOA: boolean | null // null means loading\n  autonomous?: boolean\n}\n\ninterface DelegateInfoRes {\n  data:\n    | {\n        delegates: {\n          id: string\n          delegatedVotes: string\n          delegatedVotesRaw: string\n          tokenHoldersRepresentedAmount: number\n          votes: {\n            proposal: {\n              id: string\n            }\n            support: boolean\n            votes: string\n          }[]\n        }[]\n      }\n    | undefined\n}\n\n// undefined means loading, null means no delegate found\nexport function useDelegateInfo(address: string | undefined): DelegateInfo | undefined | null {\n  const { library } = useActiveWeb3React()\n  const client = useSubgraphClient()\n\n  const [data, setData] = useState<DelegateInfo | undefined | null>()\n\n  const isEOA = useIsEOA(address)\n\n  const [activeProtocol] = useActiveProtocol()\n\n  // reset data on account switch\n  const prevAddress = usePrevious(address)\n  const prevProtocol = usePrevious(activeProtocol)\n  useEffect(() => {\n    if ((prevAddress !== address && !!prevAddress && !!address) || prevProtocol !== activeProtocol) {\n      setData(undefined)\n    }\n  }, [activeProtocol, address, prevAddress, prevProtocol])\n\n  useEffect(() => {\n    async function fetchData() {\n      client\n        ?.query({\n          query: DELEGATE_INFO,\n          variables: {\n            address: address?.toLocaleLowerCase(),\n          },\n        })\n        .then(async (res: DelegateInfoRes) => {\n          if (res && res.data && res.data?.delegates[0]) {\n            const source = await library?.getCode(res.data.delegates[0].id)\n            const resData = res.data.delegates[0]\n\n            if (!resData) {\n              setData({\n                delegatedVotes: 0,\n                delegatedVotesRaw: 0,\n                tokenHoldersRepresentedAmount: 0,\n                votes: [],\n                EOA: isEOA,\n                autonomous: source === AUTONOMOUS_PROPOSAL_BYTECODE,\n              })\n            }\n\n            const votes = resData\n              ? resData.votes\n                  // sort in order created\n                  .sort((a, b) => (parseInt(a.proposal.id) > parseInt(b.proposal.id) ? 1 : -1))\n                  .map((v: { proposal: { id: string }; support: boolean; votes: string }) => ({\n                    proposal: parseInt(v.proposal.id),\n                    votes: parseFloat(v.votes),\n                    support: v.support,\n                  }))\n              : []\n            setData({\n              delegatedVotes: parseFloat(resData?.delegatedVotes ?? '0'),\n              delegatedVotesRaw: parseInt(resData?.delegatedVotesRaw ?? '0'),\n              tokenHoldersRepresentedAmount: resData?.tokenHoldersRepresentedAmount ?? 0,\n              votes,\n              EOA: isEOA,\n              autonomous: source === AUTONOMOUS_PROPOSAL_BYTECODE,\n            })\n          } else {\n            setData(null)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!data && address && library) {\n      fetchData()\n    }\n  }, [address, client, data, isEOA, library])\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}