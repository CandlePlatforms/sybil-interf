{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/sybil-interface-candle/src/components/Profile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AutoColumn } from '../Column';\nimport styled from 'styled-components';\nimport { useActiveProtocol } from '../../state/governance/hooks';\nimport EmptyProfile from '../../assets/images/emptyprofile.png';\nimport { useToggleModal } from '../../state/application/hooks';\nimport { useActiveWeb3React, useTheme } from '../../hooks';\nimport ReactGA from 'react-ga';\nimport { ApplicationModal } from '../../state/application/actions';\nimport Card from '../Card';\nimport { RowFixed, RowBetween } from '../Row';\nimport { TYPE, BlankInternalLink } from '../../theme';\nimport { ButtonBasic, ButtonCustom } from '../Button';\nimport { shortenAddress } from '../../utils';\nimport { useVerifiedHandle, useTwitterProfileData } from '../../state/social/hooks';\nimport { useTwitterAccount } from '../../state/user/hooks';\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\nimport Modal from '../Modal';\nimport TwitterFlow from '../twitter/TwitterFlow';\nimport TwitterLoginButton from '../twitter/TwitterLoginButton';\nimport TwitterIcon from '../../assets/images/Twitter_Logo_Blue.png';\nimport LogoText from '../governance/LogoText';\nimport { lighten } from 'polished';\nimport VoteContent from './VoteContent';\nimport WalletSummary from './WalletSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SectionWrapper = styled.div`\n  width: 100%;\n  padding: 1rem;\n  padding-top: 2rem;\n  height: 100%;\n\n  @media (max-width: 1080px) {\n    padding: 0;\n  }\n`;\n_c = SectionWrapper;\nconst BackgroundWrapper = styled.div`\n  background: ${({\n  theme,\n  bgColor,\n  account\n}) => !account ? theme.bg2 : `linear-gradient(180deg, ${bgColor} 0%, ${theme.bg1} 100%);`};\n  padding: 1rem;\n  height: ${({\n  account\n}) => account ? '100%' : 'initial'};\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  border-bottom-right-radius: ${({\n  account\n}) => !account ? '20px' : '0'};\n  border-bottom-left-radius: ${({\n  account\n}) => !account ? '20px' : '0'};\n`;\n_c2 = BackgroundWrapper;\nconst ButtonText = styled(TYPE.white)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    font-size: 12px;\n  `};\n`;\n_c3 = ButtonText;\nconst TwitterButton = styled(ButtonBasic)`\n  padding: 6px 12px;\n  white-space: nowrap;\n  width: 100%;\n`;\n_c4 = TwitterButton;\nconst TwitterLogo = styled.img`\n  height: 24px;\n  width: 24px;\n`;\n_c5 = TwitterLogo;\nconst RoundedProfileImage = styled.div`\n  height: 48px;\n  width: 48px;\n  background: ${({\n  theme\n}) => theme.bg4};\n  border-radius: 50%;\n  margin-right: 16px;\n\n  & > img {\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n  }\n`;\n_c6 = RoundedProfileImage;\nconst Above1080Only = styled.span`\n  display: initial;\n  @media (max-width: 1080px) {\n    display: none;\n  }\n`;\n_c7 = Above1080Only;\nconst MobileWrapper = styled.div`\n  display: none;\n  @media (max-width: 1080px) {\n    display: initial;\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    background-color: ${({\n  theme\n}) => theme.bg2};\n    z-index: 2;\n    padding: 0.5rem;\n    border-top-right-radius: 25px;\n    border-top-left-radius: 25px;\n  }\n`;\n_c8 = MobileWrapper;\nexport default function Profile() {\n  _s();\n\n  const theme = useTheme(); // account details\n\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const [activeProtocol] = useActiveProtocol(); // UI views\n\n  const toggleWalletModal = useToggleModal(ApplicationModal.WALLET); // toggle modal for twitter verification\n\n  const [showTwitterFlow, setShowTwitterFlow] = useState(false); // get any verified handles for this user + timestamps they were created at\n\n  const [twitterAccount] = useTwitterAccount(); // logged in account\n\n  const verifiedHandleEntry = useVerifiedHandle(account);\n  const loadingVerifiedHandles = verifiedHandleEntry === null;\n  const profileData = useTwitterProfileData(verifiedHandleEntry === null || verifiedHandleEntry === void 0 ? void 0 : verifiedHandleEntry.handle); // on redirect from twitter, if signed in, not verified, and no loading, show modal\n\n  const [loaded, setLoaded] = useState(false);\n  const {\n    username: usernameQuery\n  } = useParsedQueryString();\n  useEffect(() => {\n    if (twitterAccount && !verifiedHandleEntry && !loadingVerifiedHandles && !loaded && usernameQuery) {\n      setShowTwitterFlow(true);\n      setLoaded(true);\n    }\n  }, [loadingVerifiedHandles, twitterAccount, loaded, usernameQuery, verifiedHandleEntry]); // toggle for mobile view\n\n  const [showProfileModal, setShowProfileModal] = useState(false);\n\n  const ProfileContent = () => /*#__PURE__*/_jsxDEV(SectionWrapper, {\n    children: /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n      account: !!account,\n      bgColor: account ? lighten('0.01', (activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.secondaryColor) ? activeProtocol.secondaryColor : theme.bg2) : theme.bg2,\n      children: [/*#__PURE__*/_jsxDEV(TYPE.main, {\n        mb: \"16px\",\n        children: [\"Your \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.primaryColor\n          },\n          children: [\" \", activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, this), \" profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(Above1080Only, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n          fontWeight: 500,\n          fontSize: \"14px\",\n          color: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.primaryColor,\n          mb: \"1rem\",\n          children: \"Connect wallet to see voting power and link wallet address to Sybil identity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), activeProtocol && /*#__PURE__*/_jsxDEV(ButtonCustom, {\n          color: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.primaryColor,\n          bgColor: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.secondaryColor,\n          style: {\n            fontWeight: 500,\n            fontSize: '16px'\n          },\n          onClick: () => toggleWalletModal(),\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(WalletSummary, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), !verifiedHandleEntry && account ? !twitterAccount ? /*#__PURE__*/_jsxDEV(TwitterLoginButton, {\n          text: \"Add a public identity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(TwitterButton, {\n          onClick: () => {\n            ReactGA.event({\n              category: 'Social',\n              action: 'Start Link',\n              label: 'Not linked'\n            });\n            setShowTwitterFlow(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(TYPE.white, {\n              fontSize: \"14px\",\n              children: \"Add a public identity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TwitterLogo, {\n              src: TwitterIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this) : null, !verifiedHandleEntry && account ? /*#__PURE__*/_jsxDEV(TYPE.blue, {\n          fontSize: \"12px\",\n          children: \"Connecting your Twitter to your address can help people find you and delegate votes to you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(VoteContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showTwitterFlow,\n      onDismiss: () => setShowTwitterFlow(false),\n      children: /*#__PURE__*/_jsxDEV(TwitterFlow, {\n        onDismiss: () => setShowTwitterFlow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: showProfileModal,\n        onDismiss: () => setShowProfileModal(false),\n        children: /*#__PURE__*/_jsxDEV(ProfileContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        padding: \"10px\",\n        children: /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(BlankInternalLink, {\n            to: `/delegates/${activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.id}/${account}`,\n            children: /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(RoundedProfileImage, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: !(profileData === null || profileData === void 0 ? void 0 : profileData.profileURL) ? EmptyProfile : profileData === null || profileData === void 0 ? void 0 : profileData.profileURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), !account ? /*#__PURE__*/_jsxDEV(TYPE.main, {\n                children: \"Your Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this) : chainId && ((verifiedHandleEntry === null || verifiedHandleEntry === void 0 ? void 0 : verifiedHandleEntry.handle) ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"4px\",\n                children: [/*#__PURE__*/_jsxDEV(LogoText, {\n                  type: \"twitter\",\n                  children: [\"@\", verifiedHandleEntry.handle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n                  fontSize: \"12px\",\n                  children: shortenAddress(account)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(TYPE.main, {\n                mr: \"10px\",\n                color: theme.text1,\n                children: shortenAddress(account)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), !account ? /*#__PURE__*/_jsxDEV(ButtonBasic, {\n            width: \"fit-content\",\n            onClick: toggleWalletModal,\n            children: /*#__PURE__*/_jsxDEV(ButtonText, {\n              children: \"Connect wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n            children: /*#__PURE__*/_jsxDEV(ButtonCustom, {\n              onClick: () => setShowProfileModal(true),\n              bgColor: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.secondaryColor,\n              children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n                color: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.primaryColor,\n                fontWeight: 500,\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Above1080Only, {\n      children: /*#__PURE__*/_jsxDEV(ProfileContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"EyTalUNVbhguxxjnq0rzE5fxy9s=\", false, function () {\n  return [useTheme, useActiveWeb3React, useActiveProtocol, useToggleModal, useTwitterAccount, useVerifiedHandle, useTwitterProfileData, useParsedQueryString];\n});\n\n_c9 = Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"SectionWrapper\");\n$RefreshReg$(_c2, \"BackgroundWrapper\");\n$RefreshReg$(_c3, \"ButtonText\");\n$RefreshReg$(_c4, \"TwitterButton\");\n$RefreshReg$(_c5, \"TwitterLogo\");\n$RefreshReg$(_c6, \"RoundedProfileImage\");\n$RefreshReg$(_c7, \"Above1080Only\");\n$RefreshReg$(_c8, \"MobileWrapper\");\n$RefreshReg$(_c9, \"Profile\");","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/components/Profile/index.tsx"],"names":["React","useState","useEffect","AutoColumn","styled","useActiveProtocol","EmptyProfile","useToggleModal","useActiveWeb3React","useTheme","ReactGA","ApplicationModal","Card","RowFixed","RowBetween","TYPE","BlankInternalLink","ButtonBasic","ButtonCustom","shortenAddress","useVerifiedHandle","useTwitterProfileData","useTwitterAccount","useParsedQueryString","Modal","TwitterFlow","TwitterLoginButton","TwitterIcon","LogoText","lighten","VoteContent","WalletSummary","SectionWrapper","div","BackgroundWrapper","theme","bgColor","account","bg2","bg1","ButtonText","white","mediaWidth","upToSmall","TwitterButton","TwitterLogo","img","RoundedProfileImage","bg4","Above1080Only","span","MobileWrapper","Profile","chainId","activeProtocol","toggleWalletModal","WALLET","showTwitterFlow","setShowTwitterFlow","twitterAccount","verifiedHandleEntry","loadingVerifiedHandles","profileData","handle","loaded","setLoaded","username","usernameQuery","showProfileModal","setShowProfileModal","ProfileContent","secondaryColor","color","primaryColor","name","fontWeight","fontSize","event","category","action","label","id","profileURL","text1"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AutoColumn } from '../Column'\nimport styled from 'styled-components'\nimport { useActiveProtocol } from '../../state/governance/hooks'\nimport EmptyProfile from '../../assets/images/emptyprofile.png'\nimport { useToggleModal } from '../../state/application/hooks'\nimport { useActiveWeb3React, useTheme } from '../../hooks'\nimport ReactGA from 'react-ga'\nimport { ApplicationModal } from '../../state/application/actions'\nimport Card from '../Card'\nimport { RowFixed, RowBetween } from '../Row'\nimport { TYPE, BlankInternalLink } from '../../theme'\nimport { ButtonBasic, ButtonCustom } from '../Button'\nimport { shortenAddress } from '../../utils'\nimport { useVerifiedHandle, useTwitterProfileData } from '../../state/social/hooks'\nimport { useTwitterAccount } from '../../state/user/hooks'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport Modal from '../Modal'\nimport TwitterFlow from '../twitter/TwitterFlow'\nimport TwitterLoginButton from '../twitter/TwitterLoginButton'\nimport TwitterIcon from '../../assets/images/Twitter_Logo_Blue.png'\nimport LogoText from '../governance/LogoText'\nimport { lighten } from 'polished'\nimport VoteContent from './VoteContent'\nimport WalletSummary from './WalletSummary'\n\nconst SectionWrapper = styled.div`\n  width: 100%;\n  padding: 1rem;\n  padding-top: 2rem;\n  height: 100%;\n\n  @media (max-width: 1080px) {\n    padding: 0;\n  }\n`\n\nconst BackgroundWrapper = styled.div<{ bgColor?: string; account: boolean }>`\n  background: ${({ theme, bgColor, account }) =>\n    !account ? theme.bg2 : `linear-gradient(180deg, ${bgColor} 0%, ${theme.bg1} 100%);`};\n  padding: 1rem;\n  height: ${({ account }) => (account ? '100%' : 'initial')};\n  border-top-right-radius: 20px;\n  border-top-left-radius: 20px;\n  border-bottom-right-radius: ${({ account }) => (!account ? '20px' : '0')};\n  border-bottom-left-radius: ${({ account }) => (!account ? '20px' : '0')};\n`\n\nconst ButtonText = styled(TYPE.white)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 12px;\n  `};\n`\n\nconst TwitterButton = styled(ButtonBasic)`\n  padding: 6px 12px;\n  white-space: nowrap;\n  width: 100%;\n`\n\nconst TwitterLogo = styled.img`\n  height: 24px;\n  width: 24px;\n`\n\nconst RoundedProfileImage = styled.div`\n  height: 48px;\n  width: 48px;\n  background: ${({ theme }) => theme.bg4};\n  border-radius: 50%;\n  margin-right: 16px;\n\n  & > img {\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n  }\n`\n\nconst Above1080Only = styled.span`\n  display: initial;\n  @media (max-width: 1080px) {\n    display: none;\n  }\n`\n\nconst MobileWrapper = styled.div`\n  display: none;\n  @media (max-width: 1080px) {\n    display: initial;\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    background-color: ${({ theme }) => theme.bg2};\n    z-index: 2;\n    padding: 0.5rem;\n    border-top-right-radius: 25px;\n    border-top-left-radius: 25px;\n  }\n`\n\nexport default function Profile() {\n  const theme = useTheme()\n\n  // account details\n  const { chainId, account } = useActiveWeb3React()\n  const [activeProtocol] = useActiveProtocol()\n\n  // UI views\n  const toggleWalletModal = useToggleModal(ApplicationModal.WALLET)\n\n  // toggle modal for twitter verification\n  const [showTwitterFlow, setShowTwitterFlow] = useState<boolean>(false)\n\n  // get any verified handles for this user + timestamps they were created at\n  const [twitterAccount] = useTwitterAccount() // logged in account\n  const verifiedHandleEntry = useVerifiedHandle(account)\n\n  const loadingVerifiedHandles = verifiedHandleEntry === null\n  const profileData = useTwitterProfileData(verifiedHandleEntry?.handle)\n\n  // on redirect from twitter, if signed in, not verified, and no loading, show modal\n  const [loaded, setLoaded] = useState(false)\n  const { username: usernameQuery } = useParsedQueryString()\n  useEffect(() => {\n    if (twitterAccount && !verifiedHandleEntry && !loadingVerifiedHandles && !loaded && usernameQuery) {\n      setShowTwitterFlow(true)\n      setLoaded(true)\n    }\n  }, [loadingVerifiedHandles, twitterAccount, loaded, usernameQuery, verifiedHandleEntry])\n\n  // toggle for mobile view\n  const [showProfileModal, setShowProfileModal] = useState(false)\n\n  const ProfileContent = () => (\n    <SectionWrapper>\n      <BackgroundWrapper\n        account={!!account}\n        bgColor={\n          account\n            ? lighten('0.01', activeProtocol?.secondaryColor ? activeProtocol.secondaryColor : theme.bg2)\n            : theme.bg2\n        }\n      >\n        <TYPE.main mb=\"16px\">\n          Your <span style={{ color: activeProtocol?.primaryColor }}> {activeProtocol?.name}</span> profile\n        </TYPE.main>\n        {!account ? (\n          <Above1080Only>\n            <TYPE.body fontWeight={500} fontSize=\"14px\" color={activeProtocol?.primaryColor} mb=\"1rem\">\n              Connect wallet to see voting power and link wallet address to Sybil identity.\n            </TYPE.body>\n            {activeProtocol && (\n              <ButtonCustom\n                color={activeProtocol?.primaryColor}\n                bgColor={activeProtocol?.secondaryColor}\n                style={{\n                  fontWeight: 500,\n                  fontSize: '16px',\n                }}\n                onClick={() => toggleWalletModal()}\n              >\n                Connect Wallet\n              </ButtonCustom>\n            )}\n          </Above1080Only>\n        ) : (\n          <AutoColumn gap=\"16px\">\n            <WalletSummary />\n            {!verifiedHandleEntry && account ? (\n              !twitterAccount ? (\n                <TwitterLoginButton text=\"Add a public identity\" />\n              ) : (\n                <TwitterButton\n                  onClick={() => {\n                    ReactGA.event({\n                      category: 'Social',\n                      action: 'Start Link',\n                      label: 'Not linked',\n                    })\n                    setShowTwitterFlow(true)\n                  }}\n                >\n                  <RowBetween>\n                    <TYPE.white fontSize=\"14px\">Add a public identity</TYPE.white>\n                    <TwitterLogo src={TwitterIcon} />\n                  </RowBetween>\n                </TwitterButton>\n              )\n            ) : null}\n            {!verifiedHandleEntry && account ? (\n              <TYPE.blue fontSize=\"12px\">\n                Connecting your Twitter to your address can help people find you and delegate votes to you.\n              </TYPE.blue>\n            ) : null}\n            <VoteContent />\n          </AutoColumn>\n        )}\n      </BackgroundWrapper>\n    </SectionWrapper>\n  )\n\n  return (\n    <>\n      <Modal isOpen={showTwitterFlow} onDismiss={() => setShowTwitterFlow(false)}>\n        <TwitterFlow onDismiss={() => setShowTwitterFlow(false)} />\n      </Modal>\n      <MobileWrapper>\n        <Modal isOpen={showProfileModal} onDismiss={() => setShowProfileModal(false)}>\n          <ProfileContent />\n        </Modal>\n        <Card padding=\"10px\">\n          <RowBetween>\n            <BlankInternalLink to={`/delegates/${activeProtocol?.id}/${account}`}>\n              <RowFixed>\n                <RoundedProfileImage>\n                  <img src={!profileData?.profileURL ? EmptyProfile : profileData?.profileURL} />\n                </RoundedProfileImage>\n                {!account ? (\n                  <TYPE.main>Your Address</TYPE.main>\n                ) : (\n                  chainId &&\n                  (verifiedHandleEntry?.handle ? (\n                    <AutoColumn gap=\"4px\">\n                      <LogoText type=\"twitter\">@{verifiedHandleEntry.handle}</LogoText>\n                      <TYPE.main fontSize=\"12px\">{shortenAddress(account)}</TYPE.main>\n                    </AutoColumn>\n                  ) : (\n                    <TYPE.main mr=\"10px\" color={theme.text1}>\n                      {shortenAddress(account)}\n                    </TYPE.main>\n                  ))\n                )}\n              </RowFixed>\n            </BlankInternalLink>\n            {!account ? (\n              <ButtonBasic width=\"fit-content\" onClick={toggleWalletModal}>\n                <ButtonText>Connect wallet</ButtonText>\n              </ButtonBasic>\n            ) : (\n              <RowFixed>\n                <ButtonCustom onClick={() => setShowProfileModal(true)} bgColor={activeProtocol?.secondaryColor}>\n                  <TYPE.body color={activeProtocol?.primaryColor} fontWeight={500}>\n                    Details\n                  </TYPE.body>\n                </ButtonCustom>\n              </RowFixed>\n            )}\n          </RowBetween>\n        </Card>\n      </MobileWrapper>\n      <Above1080Only>\n        <ProfileContent />\n      </Above1080Only>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}