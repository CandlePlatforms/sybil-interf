{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { parse } from 'qs';\nimport { useTwitterAccount } from '../user/hooks';\n/**\n * Used for redirects from Twitter oauth server.\n * If twitter handle passed as query param, set in global state.\n * @param param0 twitter handle\n */\n\nexport default function TwitterAccountQueryParamReader({\n  location: {\n    search\n  }\n}) {\n  _s();\n\n  const [, setTwitterAccount] = useTwitterAccount();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const username = parsed.username;\n    if (typeof username !== 'string') return;\n    setTwitterAccount(username);\n  }, [search, setTwitterAccount]);\n  return null;\n}\n\n_s(TwitterAccountQueryParamReader, \"l+QDZKrJiHVwuj/4vwJuj6w5+hc=\", false, function () {\n  return [useTwitterAccount];\n});\n\n_c = TwitterAccountQueryParamReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterAccountQueryParamReader\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/sybil-interf/src/state/social/TwitterAccountQueryParamReader.tsx"],"names":["useEffect","parse","useTwitterAccount","TwitterAccountQueryParamReader","location","search","setTwitterAccount","length","parsed","parseArrays","ignoreQueryPrefix","username"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,KAAT,QAAsB,IAAtB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,8BAAT,CAAwC;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAAxC,EAA6F;AAAA;;AAC1G,QAAM,GAAGC,iBAAH,IAAwBJ,iBAAiB,EAA/C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,MAAL,EAAa;AACb,QAAIA,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AAEvB,UAAMC,MAAM,GAAGP,KAAK,CAACI,MAAD,EAAS;AAC3BI,MAAAA,WAAW,EAAE,KADc;AAE3BC,MAAAA,iBAAiB,EAAE;AAFQ,KAAT,CAApB;AAKA,UAAMC,QAAQ,GAAGH,MAAM,CAACG,QAAxB;AAEA,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAElCL,IAAAA,iBAAiB,CAACK,QAAD,CAAjB;AACD,GAdQ,EAcN,CAACN,MAAD,EAASC,iBAAT,CAdM,CAAT;AAgBA,SAAO,IAAP;AACD;;GApBuBH,8B;UACQD,iB;;;KADRC,8B","sourcesContent":["import { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { useTwitterAccount } from '../user/hooks'\n\n/**\n * Used for redirects from Twitter oauth server.\n * If twitter handle passed as query param, set in global state.\n * @param param0 twitter handle\n */\nexport default function TwitterAccountQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const [, setTwitterAccount] = useTwitterAccount()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const username = parsed.username\n\n    if (typeof username !== 'string') return\n\n    setTwitterAccount(username)\n  }, [search, setTwitterAccount])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}