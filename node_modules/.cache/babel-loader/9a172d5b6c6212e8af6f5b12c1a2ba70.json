{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/sybil-interface-candle/src/pages/Delegates.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BodyWrapper, MediumHeaderWrapper } from './AppBody';\nimport DelegateList from '../components/governance/DelegateList';\nimport { useActiveWeb3React } from '../hooks';\nimport { ChainId } from '@uniswap/sdk';\nimport { OutlineCard } from '../components/Card';\nimport { useProtocolUpdate } from '../hooks/useProtocolUpdate';\nimport { AutoColumn } from '../components/Column';\nimport Dropdown from '../components/governance/Dropdown';\nimport { TYPE } from '../theme';\nimport { useActiveProtocol } from '../state/governance/hooks';\nimport { RowFixed } from '../components/Row';\nimport { WrappedListLogo } from '../components/governance/styled';\nimport Tabs from '../components/governance/Tabs';\nimport { Above1080Only, Below1080Only } from '../theme/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Delegates({\n  match: {\n    params: {\n      protocolID\n    }\n  }\n}) {\n  _s();\n\n  // if valid protocol id passed in, update global active protocol\n  useProtocolUpdate(protocolID); // if on testnet, show warning\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [activeProtocol] = useActiveProtocol();\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(MediumHeaderWrapper, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Above1080Only, {\n            children: /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(WrappedListLogo, {\n                src: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n                ml: \"8px\",\n                fontWeight: 600,\n                color: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.primaryColor,\n                children: activeProtocol === null || activeProtocol === void 0 ? void 0 : activeProtocol.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Below1080Only, {\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), chainId === ChainId.MAINNET ? /*#__PURE__*/_jsxDEV(DelegateList, {\n        hideZero: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OutlineCard, {\n        children: \"Please switch to Ethereum mainnet. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Delegates, \"vj8d8jk69Z2iRppNmj7DhEQo7iU=\", false, function () {\n  return [useProtocolUpdate, useActiveWeb3React, useActiveProtocol];\n});\n\n_c = Delegates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Delegates\");","map":{"version":3,"sources":["/Users/safahi/Downloads/sybil-interface-candle/src/pages/Delegates.tsx"],"names":["React","BodyWrapper","MediumHeaderWrapper","DelegateList","useActiveWeb3React","ChainId","OutlineCard","useProtocolUpdate","AutoColumn","Dropdown","TYPE","useActiveProtocol","RowFixed","WrappedListLogo","Tabs","Above1080Only","Below1080Only","Delegates","match","params","protocolID","chainId","activeProtocol","logo","primaryColor","name","MAINNET"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,WAAjD;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,qBAA7C;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADyB,CAAnB,EAIkC;AAAA;;AAC/C;AACAb,EAAAA,iBAAiB,CAACa,UAAD,CAAjB,CAF+C,CAI/C;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcjB,kBAAkB,EAAtC;AAEA,QAAM,CAACkB,cAAD,IAAmBX,iBAAiB,EAA1C;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAA,8BACE,QAAC,mBAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC,IAAhB;AAAA,kCACE,QAAC,aAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,eAAD;AAAiB,gBAAA,GAAG,EAAEW,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,YAAN;AAAmB,gBAAA,EAAE,EAAC,KAAtB;AAA4B,gBAAA,UAAU,EAAE,GAAxC;AAA6C,gBAAA,KAAK,EAAED,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEE,YAApE;AAAA,0BACGF,cADH,aACGA,cADH,uBACGA,cAAc,CAAEG;AADnB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,aAAD;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAYE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAiBGJ,OAAO,KAAKhB,OAAO,CAACqB,OAApB,gBACC,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAxCuBT,S;UAMtBV,iB,EAGoBH,kB,EAEKO,iB;;;KAXHM,S","sourcesContent":["import React from 'react'\nimport { BodyWrapper, MediumHeaderWrapper } from './AppBody'\nimport DelegateList from '../components/governance/DelegateList'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useActiveWeb3React } from '../hooks'\nimport { ChainId } from '@uniswap/sdk'\nimport { OutlineCard } from '../components/Card'\nimport { useProtocolUpdate } from '../hooks/useProtocolUpdate'\nimport { AutoColumn } from '../components/Column'\nimport Dropdown from '../components/governance/Dropdown'\nimport { TYPE } from '../theme'\nimport { useActiveProtocol } from '../state/governance/hooks'\nimport { RowFixed } from '../components/Row'\nimport { WrappedListLogo } from '../components/governance/styled'\nimport Tabs from '../components/governance/Tabs'\n\nimport { Above1080Only, Below1080Only } from '../theme/components'\n\nexport default function Delegates({\n  match: {\n    params: { protocolID },\n  },\n}: RouteComponentProps<{ protocolID?: string }>) {\n  // if valid protocol id passed in, update global active protocol\n  useProtocolUpdate(protocolID)\n\n  // if on testnet, show warning\n  const { chainId } = useActiveWeb3React()\n\n  const [activeProtocol] = useActiveProtocol()\n\n  return (\n    <BodyWrapper>\n      <AutoColumn gap=\"1rem\">\n        <MediumHeaderWrapper>\n          <AutoColumn gap=\"sm\">\n            <Above1080Only>\n              <RowFixed>\n                <WrappedListLogo src={activeProtocol?.logo} />\n                <TYPE.mediumHeader ml=\"8px\" fontWeight={600} color={activeProtocol?.primaryColor}>\n                  {activeProtocol?.name}\n                </TYPE.mediumHeader>\n              </RowFixed>\n            </Above1080Only>\n            <Below1080Only>\n              <Dropdown />\n            </Below1080Only>\n            <Tabs />\n          </AutoColumn>\n        </MediumHeaderWrapper>\n        {chainId === ChainId.MAINNET ? (\n          <DelegateList hideZero={false} />\n        ) : (\n          <OutlineCard>Please switch to Ethereum mainnet. </OutlineCard>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}